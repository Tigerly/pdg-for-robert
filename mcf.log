file parameter: test/SPECCPU2006/429.mcf/mcf.bc
Pass Arguments:  -targetlibinfo -datalayout -notti -basictti -x86tti -no-aa -ata -dsa-local -alloc-identify -dsa-stdlib -dsa-bu -dsa-td -dsa-aa -dsnodeequivs -smack-ds-aa -pdg -dot-pdg -verify -verify-di
Target Library Information
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
No Alias Analysis (always returns 'may' alias)
  ModulePass Manager
    Identify Address Taken Functions
    Local Data Structure Analysis
    Allocator Identification Analysis (find malloc/free wrappers)
      Unnamed pass: implement Pass::getPassName()
    Standard Library Local Data Structure Analysis
    Bottom-up Data Structure Analysis
    Top-down Data Structure Analysis
    Data Structure Analysis Alias Analysis
    Compute DSNode equivalence classes
    Smack - Data Structure Analysis Alias Analysis
    Program Dependency Graph
      Unnamed pass: implement Pass::getPassName()
    FunctionPass Manager
      Print instruction-level program dependency graph of function to 'dot' file
      Module Verifier
    Debug Info Verifier
    Bitcode Writer
Pass Arguments:  -domtree -loops
  FunctionPass Manager
    Dominator Tree Construction
    Natural Loop Information
Pass Arguments:  -postdomtree -cdg -fda -ddg
  FunctionPass Manager
    Post-Dominator Tree Construction
    Control Dependency Graph
    Flow  Dependence Analysis
    Data Dependency Graph
ProgramDependencyGraph::runOnModule
funcMap size = 38
======Global List: ======
PDG 2.631579e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:global_opt
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:global_opt
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 99 Function: global_opt
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   %call1 = call i64 @primal_net_simplex(%struct.network* @net)
inside buildParameterTrees Time = 0
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call1 = call i64 @primal_net_simplex(%struct.network* @net) func :primal_net_simplex
TI2->getFieldType() is empty!
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call1 = call i64 @primal_net_simplex(%struct.network* @net)
DEBUG 411 New call for tree construction:   %call3 = call double @flow_cost(%struct.network* @net)
inside buildParameterTrees Time = 1
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call3 = call double @flow_cost(%struct.network* @net) func :flow_cost
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call3 = call double @flow_cost(%struct.network* @net)
DEBUG 411 New call for tree construction:   %call8 = call i64 @suspend_impl(%struct.network* @net, i64 -1, i64 0)
inside buildParameterTrees Time = 2
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 3
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 4
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call8 = call i64 @suspend_impl(%struct.network* @net, i64 -1, i64 0) func :suspend_impl
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call8 = call i64 @suspend_impl(%struct.network* @net, i64 -1, i64 0)
DEBUG 411 New call for tree construction:   %call14 = call i64 @price_out_impl(%struct.network* @net)
inside buildParameterTrees Time = 5
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call14 = call i64 @price_out_impl(%struct.network* @net) func :price_out_impl
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call14 = call i64 @price_out_impl(%struct.network* @net)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 7
printf is defined outside!
exit is defined outside!
PDG 5.263158e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 715 Function: main
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   %call6 = call i64 @read_min(%struct.network* @net)
inside buildParameterTrees Time = 6
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call6 = call i64 @read_min(%struct.network* @net) func :read_min
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call6 = call i64 @read_min(%struct.network* @net)
DEBUG 411 New call for tree construction:   %call9 = call i64 @getfree(%struct.network* @net)
inside buildParameterTrees Time = 7
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call9 = call i64 @getfree(%struct.network* @net) func :getfree
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call9 = call i64 @getfree(%struct.network* @net)
DEBUG 411 New call for tree construction:   %call12 = call i64 @primal_start_artificial(%struct.network* @net)
inside buildParameterTrees Time = 8
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call12 = call i64 @primal_start_artificial(%struct.network* @net) func :primal_start_artificial
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call12 = call i64 @primal_start_artificial(%struct.network* @net)
DEBUG 411 New call for tree construction:   %call13 = call i64 @global_opt()
before connectCallerAndCallee :  %call13 = call i64 @global_opt() func :global_opt
DEBUG 459 connectCallerAndCallee callInst:   %call13 = call i64 @global_opt()
DEBUG 411 New call for tree construction:   %call15 = call i64 @write_circulations(i8* getelementptr inbounds ([8 x i8]* @.str15, i32 0, i32 0), %struct.network* @net)
inside buildParameterTrees Time = 9
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 10
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call15 = call i64 @write_circulations(i8* getelementptr inbounds ([8 x i8]* @.str15, i32 0, i32 0), %struct.network* @net) func :write_circulations
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call15 = call i64 @write_circulations(i8* getelementptr inbounds ([8 x i8]* @.str15, i32 0, i32 0), %struct.network* @net)
before connectCallerAndCallee :  %call18 = call i64 @getfree(%struct.network* @net) func :getfree
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call18 = call i64 @getfree(%struct.network* @net)
before connectCallerAndCallee :  %call20 = call i64 @getfree(%struct.network* @net) func :getfree
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call20 = call i64 @getfree(%struct.network* @net)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 13
llvm.memset.p0i8.i64 is defined outside!
strcpy is defined outside!
PDG 7.894737e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:refresh_neighbour_lists
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:refresh_neighbour_lists
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1296 Function: refresh_neighbour_lists
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 45
PDG 1.052632e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:refresh_potential
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:refresh_potential
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1397 Function: refresh_potential
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 77
PDG 1.315789e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:flow_cost
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:flow_cost
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1551 Function: flow_cost
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 117
PDG 1.578947e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:flow_org_cost
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:flow_org_cost
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1705 Function: flow_org_cost
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 157
PDG 1.842105e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_feasible
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_feasible
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1814 Function: primal_feasible
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 185
PDG 2.105263e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:dual_feasible
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:dual_feasible
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1888 Function: dual_feasible
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 205
fprintf is defined outside!
PDG 2.368421e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:getfree
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:getfree
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1943 Function: getfree
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 220
free is defined outside!
PDG 2.631579e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_min
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_min
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 2559 Function: read_min
computerDependencies DEBUG 1
before connectCallerAndCallee :  %call36 = call i64 @getfree(%struct.network* %45) func :getfree
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call36 = call i64 @getfree(%struct.network* %45)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 398
fopen is defined outside!
fgets is defined outside!
__isoc99_sscanf is defined outside!
calloc is defined outside!
fclose is defined outside!
PDG 2.894737e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:resize_prob
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:resize_prob
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 2671 Function: resize_prob
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 430
realloc is defined outside!
fflush is defined outside!
PDG 3.157895e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:insert_new_arc
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:insert_new_arc
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 2840 Function: insert_new_arc
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 467
PDG 3.421053e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:replace_weaker_arc
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:replace_weaker_arc
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 3038 Function: replace_weaker_arc
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 512
PDG 3.684211e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:price_out_impl
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:price_out_impl
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 3400 Function: price_out_impl
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   %call = call i64 @resize_prob(%struct.network* %20)
inside buildParameterTrees Time = 11
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call = call i64 @resize_prob(%struct.network* %20) func :resize_prob
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call = call i64 @resize_prob(%struct.network* %20)
DEBUG 411 New call for tree construction:   call void @refresh_neighbour_lists(%struct.network* %21)
inside buildParameterTrees Time = 12
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @refresh_neighbour_lists(%struct.network* %21) func :refresh_neighbour_lists
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @refresh_neighbour_lists(%struct.network* %21)
DEBUG 411 New call for tree construction:   call void @insert_new_arc(%struct.arc* %78, i64 %79, %struct.node* %80, %struct.node* %81, i64 %82, i64 %83)
inside buildParameterTrees Time = 13
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 14
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 15
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 16
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 17
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 18
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @insert_new_arc(%struct.arc* %78, i64 %79, %struct.node* %80, %struct.node* %81, i64 %82, i64 %83) func :insert_new_arc
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @insert_new_arc(%struct.arc* %78, i64 %79, %struct.node* %80, %struct.node* %81, i64 %82, i64 %83)
DEBUG 411 New call for tree construction:   call void @replace_weaker_arc(%struct.network* %88, %struct.arc* %89, %struct.node* %90, %struct.node* %91, i64 %92, i64 %93)
inside buildParameterTrees Time = 19
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 20
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 21
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 22
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 23
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 24
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @replace_weaker_arc(%struct.network* %88, %struct.arc* %89, %struct.node* %90, %struct.node* %91, i64 %92, i64 %93) func :replace_weaker_arc
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @replace_weaker_arc(%struct.network* %88, %struct.arc* %89, %struct.node* %90, %struct.node* %91, i64 %92, i64 %93)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 607
PDG 3.947368e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:suspend_impl
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:suspend_impl
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 3970 Function: suspend_impl
computerDependencies DEBUG 1
before connectCallerAndCallee :  call void @refresh_neighbour_lists(%struct.network* %60) func :refresh_neighbour_lists
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @refresh_neighbour_lists(%struct.network* %60)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 646
llvm.memcpy.p0i8.p0i8.i64 is defined outside!
PDG 4.210526e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_start_artificial
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_start_artificial
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 4129 Function: primal_start_artificial
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 702
PDG 4.473684e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:write_circulations
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:write_circulations
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 4260 Function: write_circulations
computerDependencies DEBUG 1
before connectCallerAndCallee :  call void @refresh_neighbour_lists(%struct.network* %5) func :refresh_neighbour_lists
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @refresh_neighbour_lists(%struct.network* %5)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 736
PDG 4.736842e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:update_tree
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:update_tree
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 4660 Function: update_tree
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 845
PDG 5.000000e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_iminus
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_iminus
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 4804 Function: primal_iminus
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 894
PDG 5.263158e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_update_flow
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_update_flow
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 4860 Function: primal_update_flow
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 910
PDG 5.526316e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_net_simplex
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_net_simplex
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5082 Function: primal_net_simplex
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   %call = call %struct.arc* @primal_bea_mpp(i64 %10, %struct.arc* %11, %struct.arc* %12, i64* %red_cost_of_bea)
inside buildParameterTrees Time = 25
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 26
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 27
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 28
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call = call %struct.arc* @primal_bea_mpp(i64 %10, %struct.arc* %11, %struct.arc* %12, i64* %red_cost_of_bea) func :primal_bea_mpp
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call = call %struct.arc* @primal_bea_mpp(i64 %10, %struct.arc* %11, %struct.arc* %12, i64* %red_cost_of_bea)
DEBUG 411 New call for tree construction:   %call11 = call %struct.node* @primal_iminus(i64* %delta, i64* %xchange, %struct.node* %24, %struct.node* %25, %struct.node** %w)
inside buildParameterTrees Time = 29
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 30
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 31
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 32
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 33
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call11 = call %struct.node* @primal_iminus(i64* %delta, i64* %xchange, %struct.node* %24, %struct.node* %25, %struct.node** %w) func :primal_iminus
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call11 = call %struct.node* @primal_iminus(i64* %delta, i64* %xchange, %struct.node* %24, %struct.node* %25, %struct.node** %w)
DEBUG 411 New call for tree construction:   call void @primal_update_flow(%struct.node* %34, %struct.node* %35, %struct.node* %36)
inside buildParameterTrees Time = 34
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 35
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 36
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @primal_update_flow(%struct.node* %34, %struct.node* %35, %struct.node* %36) func :primal_update_flow
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @primal_update_flow(%struct.node* %34, %struct.node* %35, %struct.node* %36)
DEBUG 411 New call for tree construction:   call void @update_tree(i64 %conv46, i64 %55, i64 %56, i64 %57, %struct.node* %58, %struct.node* %59, %struct.node* %60, %struct.node* %61, %struct.node* %62, %struct.arc* %63, i64 %64, i64 %66)
inside buildParameterTrees Time = 37
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 38
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 39
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 40
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 41
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 42
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 43
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 44
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 45
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 46
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 47
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 48
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @update_tree(i64 %conv46, i64 %55, i64 %56, i64 %57, %struct.node* %58, %struct.node* %59, %struct.node* %60, %struct.node* %61, %struct.node* %62, %struct.arc* %63, i64 %64, i64 %66) func :update_tree
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @update_tree(i64 %conv46, i64 %55, i64 %56, i64 %57, %struct.node* %58, %struct.node* %59, %struct.node* %60, %struct.node* %61, %struct.node* %62, %struct.arc* %63, i64 %64, i64 %66)
DEBUG 411 New call for tree construction:   %call53 = call i64 @refresh_potential(%struct.network* %72)
inside buildParameterTrees Time = 49
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call53 = call i64 @refresh_potential(%struct.network* %72) func :refresh_potential
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call53 = call i64 @refresh_potential(%struct.network* %72)
before connectCallerAndCallee :  %call58 = call i64 @refresh_potential(%struct.network* %75) func :refresh_potential
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call58 = call i64 @refresh_potential(%struct.network* %75)
DEBUG 411 New call for tree construction:   %call60 = call i64 @primal_feasible(%struct.network* %78)
inside buildParameterTrees Time = 50
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call60 = call i64 @primal_feasible(%struct.network* %78) func :primal_feasible
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call60 = call i64 @primal_feasible(%struct.network* %78)
DEBUG 411 New call for tree construction:   %call61 = call i64 @dual_feasible(%struct.network* %79)
inside buildParameterTrees Time = 51
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call61 = call i64 @dual_feasible(%struct.network* %79) func :dual_feasible
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call61 = call i64 @dual_feasible(%struct.network* %79)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 971
PDG 5.789474e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:bea_is_dual_infeasible
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:bea_is_dual_infeasible
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5580 Function: bea_is_dual_infeasible
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 976
PDG 6.052632e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:sort_basket
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:sort_basket
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5684 Function: sort_basket
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   call void @sort_basket(i64 %33, i64 %34)
inside buildParameterTrees Time = 52
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 53
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  call void @sort_basket(i64 %33, i64 %34) func :sort_basket
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @sort_basket(i64 %33, i64 %34)
before connectCallerAndCallee :  call void @sort_basket(i64 %38, i64 %39) func :sort_basket
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @sort_basket(i64 %38, i64 %39)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 995
PDG 6.315789e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_bea_mpp
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:primal_bea_mpp
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5935 Function: primal_bea_mpp
computerDependencies DEBUG 1
DEBUG 411 New call for tree construction:   %call = call i32 @bea_is_dual_infeasible(%struct.arc* %56, i64 %57)
inside buildParameterTrees Time = 54
After ACTUAL_IN_TREE construction!
inside buildParameterTrees Time = 55
After ACTUAL_IN_TREE construction!
before connectCallerAndCallee :  %call = call i32 @bea_is_dual_infeasible(%struct.arc* %56, i64 %57) func :bea_is_dual_infeasible
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   %call = call i32 @bea_is_dual_infeasible(%struct.arc* %56, i64 %57)
before connectCallerAndCallee :  call void @sort_basket(i64 1, i64 %79) func :sort_basket
DEBUG 221
DEBUG 221
DEBUG 459 connectCallerAndCallee callInst:   call void @sort_basket(i64 1, i64 %79)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 1052


 PDG construction completed! ^_^

funcs = 24
+++++++++++++++++++++++++++++++++++++++++++++
globalList.size = 42
sensitive global found! value = @initialize = internal global i64 1, align 8
sensitive_global: @initialize = internal global i64 1, align 8
sensitive_nodes.size = 1
queue.size = 1


++++++++++SENSITIVE INSTRUCTION List is as follows:++++++++++

SENSITIVE INSTRUCTION [0] Mem Addr :0x3716d48 Value :   %0 = load i64* @initialize, align 8
SENSITIVE INSTRUCTION [1] Mem Addr :0x3716dd0 Value :   %tobool = icmp ne i64 %0, 0
SENSITIVE INSTRUCTION [2] Mem Addr :0x3716e78 Value :   br i1 %tobool, label %if.then, label %if.else


++++++++++The FUNCTION List is as follows:++++++++++

refresh_neighbour_listsis uncolored
refresh_potentialis uncolored
flow_costis uncolored
flow_org_costis uncolored
insert_new_arcis uncolored
replace_weaker_arcis uncolored
price_out_implis uncolored
suspend_implis uncolored
primal_start_artificialis uncolored
global_optis uncolored
mainis uncolored
primal_feasibleis uncolored
dual_feasibleis uncolored
getfreeis uncolored
read_minis uncolored
resize_probis uncolored
write_circulationsis uncolored
update_treeis uncolored
primal_iminusis uncolored
primal_update_flowis uncolored
primal_net_simplexis uncolored
bea_is_dual_infeasibleis uncolored
sort_basketis uncolored
primal_bea_mpp is colored(sensitive)
func name = primal_bea_mpp
non-library functions in total: 24
sen_FuncSet  : 1
ins_FuncSet  : 23
functions count = 24
Writing 'pdgragh.global_opt.dot'...instW 0x0
0  opt             0x0000000001680555 llvm::sys::PrintStackTrace(_IO_FILE*) + 37
1  opt             0x0000000001680e53
2  libpthread.so.0 0x00007fe7e1f74330
3  pdg.so          0x00007fe7e2532513 llvm::DOTGraphTraits<cot::DependencyNode<cot::InstructionWrapper>*>::getNodeLabel(cot::DependencyNode<cot::InstructionWrapper>*, cot::DependencyNode<cot::InstructionWrapper>*) + 99
4  pdg.so          0x00007fe7e25312cc llvm::GraphWriter<cot::ProgramDependencyGraph*>::writeNode(cot::DependencyNode<cot::InstructionWrapper>*) + 348
5  pdg.so          0x00007fe7e253090b llvm::raw_ostream& llvm::WriteGraph<cot::ProgramDependencyGraph*>(llvm::raw_ostream&, cot::ProgramDependencyGraph* const&, bool, llvm::Twine const&) + 107
6  pdg.so          0x00007fe7e253000b llvm::DOTGraphTraitsPrinter<cot::ProgramDependencyGraph, false, cot::ProgramDependencyGraph*, llvm::DefaultAnalysisGraphTraits<cot::ProgramDependencyGraph, cot::ProgramDependencyGraph*> >::runOnFunction(llvm::Function&) + 1003
7  opt             0x000000000160e83b llvm::FPPassManager::runOnFunction(llvm::Function&) + 539
8  opt             0x000000000160eaab llvm::FPPassManager::runOnModule(llvm::Module&) + 43
9  opt             0x000000000160f027 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 967
10 opt             0x00000000005a4109 main + 6265
11 libc.so.6       0x00007fe7e0f73f45 __libc_start_main + 245
12 opt             0x00000000005927a9
Stack dump:
0.	Program arguments: /usr/local/bin/opt -load ./pdg.so -smack-ds-aa -dot-pdg -debug-pass=Structure -time-passes 
1.	Running pass 'Function Pass Manager' on module '<stdin>'.
2.	Running pass 'Print instruction-level program dependency graph of function to 'dot' file' on function '@global_opt'
Segmentation fault (core dumped)
building program dependency graph...
Done, please enter /visualization and view
