file parameter: test/sensitive_programs/chfn.bc
Pass Arguments:  -targetlibinfo -datalayout -notti -basictti -x86tti -no-aa -ata -dsa-local -alloc-identify -dsa-stdlib -dsa-bu -dsa-td -dsa-aa -dsnodeequivs -smack-ds-aa -pdg -dot-pdg -verify -verify-di
Target Library Information
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
No Alias Analysis (always returns 'may' alias)
  ModulePass Manager
    Identify Address Taken Functions
    Local Data Structure Analysis
    Allocator Identification Analysis (find malloc/free wrappers)
      Unnamed pass: implement Pass::getPassName()
    Standard Library Local Data Structure Analysis
    Bottom-up Data Structure Analysis
    Top-down Data Structure Analysis
    Data Structure Analysis Alias Analysis
    Compute DSNode equivalence classes
    Smack - Data Structure Analysis Alias Analysis
    Program Dependency Graph
      Unnamed pass: implement Pass::getPassName()
    FunctionPass Manager
      Print instruction-level program dependency graph of function to 'dot' file
      Module Verifier
    Debug Info Verifier
    Bitcode Writer
Pass Arguments:  -domtree -loops
  FunctionPass Manager
    Dominator Tree Construction
    Natural Loop Information
Pass Arguments:  -postdomtree -cdg -fda -ddg
  FunctionPass Manager
    Post-Dominator Tree Construction
    Control Dependency Graph
    Flow  Dependence Analysis
    Data Dependency Graph
ProgramDependencyGraph::runOnModule
funcMap size = 18
======Global List: ======
PDG 5.555556e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:_auth
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:_auth
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 134 Function: _auth
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 20
fopen is defined outside!
fprintf is defined outside!
fgetc is defined outside!
__ctype_b_loc is defined outside!
strncmp is defined outside!
fclose is defined outside!
PDG 1.111111e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:auth
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:auth
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 220 Function: auth
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call37 = call i32 @_auth(i8* %arraydecay, i8* %arraydecay36)

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 
_auth has parameter trees already! Just build actual counterparts
CI =   %call37 = call i32 @_auth(i8* %arraydecay, i8* %arraydecay36)
before connectCallerAndCallee :  %call37 = call i32 @_auth(i8* %arraydecay, i8* %arraydecay36) func :_auth
DEBUG 459 connectCallerAndCallee callInst:   %call37 = call i32 @_auth(i8* %arraydecay, i8* %arraydecay36)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 32
printf is defined outside!
PDG 1.666667e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:_changeFn
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:_changeFn
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 299 Function: _changeFn
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 46
strlen is defined outside!
malloc is defined outside!
llvm.memset.p0i8.i64 is defined outside!
strcpy is defined outside!
strcat is defined outside!
exit is defined outside!
PDG 2.222222e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:changeFn
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:changeFn
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 344 Function: changeFn
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @_changeFn(i8* getelementptr inbounds ([13 x i8]* @.str11, i32 0, i32 0), i8* %arraydecay)

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 

buildFormalTypeTree in TIME: 
_changeFn has parameter trees already! Just build actual counterparts
CI =   call void @_changeFn(i8* getelementptr inbounds ([13 x i8]* @.str11, i32 0, i32 0), i8* %arraydecay)
before connectCallerAndCallee :  call void @_changeFn(i8* getelementptr inbounds ([13 x i8]* @.str11, i32 0, i32 0), i8* %arraydecay) func :_changeFn
DEBUG 459 connectCallerAndCallee callInst:   call void @_changeFn(i8* getelementptr inbounds ([13 x i8]* @.str11, i32 0, i32 0), i8* %arraydecay)
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 52
PDG 2.777778e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 365 Function: main
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call1 = call i32 @auth()
auth has parameter trees already! Just build actual counterparts
CI =   %call1 = call i32 @auth()
before connectCallerAndCallee :  %call1 = call i32 @auth() func :auth
DEBUG 459 connectCallerAndCallee callInst:   %call1 = call i32 @auth()
DEBUG 456 New call for tree construction:   call void @changeFn()
changeFn has parameter trees already! Just build actual counterparts
CI =   call void @changeFn()
before connectCallerAndCallee :  call void @changeFn() func :changeFn
DEBUG 459 connectCallerAndCallee callInst:   call void @changeFn()
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 53


 PDG construction completed! ^_^

funcs = 5
+++++++++++++++++++++++++++++++++++++++++++++
globalList.size = 16
sensitive_nodes.size = 0
queue.size = 0


++++++++++SENSITIVE INSTRUCTION List is as follows:++++++++++



++++++++++The FUNCTION List is as follows:++++++++++

_authis uncolored
mainis uncolored
authis uncolored
_changeFnis uncolored
changeFnis uncolored
non-library functions in total: 5
sen_FuncSet  : 0
ins_FuncSet  : 5
functions count = 5
Writing 'pdgragh._auth.dot'...
Writing 'pdgragh.auth.dot'...
Writing 'pdgragh._changeFn.dot'...
Writing 'pdgragh.changeFn.dot'...
Writing 'pdgragh.main.dot'...
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0400 seconds (0.0376 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.0240 ( 60.0%)   0.0240 ( 60.0%)   0.0199 ( 52.9%)  Print instruction-level program dependency graph of function to 'dot' file
   0.0040 ( 10.0%)   0.0040 ( 10.0%)   0.0069 ( 18.4%)  Program Dependency Graph
   0.0040 ( 10.0%)   0.0040 ( 10.0%)   0.0038 ( 10.2%)  Local Data Structure Analysis
   0.0040 ( 10.0%)   0.0040 ( 10.0%)   0.0020 (  5.4%)  Data Dependency Graph
   0.0040 ( 10.0%)   0.0040 ( 10.0%)   0.0014 (  3.8%)  Top-down Data Structure Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  3.7%)  Bottom-up Data Structure Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  2.5%)  Standard Library Local Data Structure Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.8%)  Compute DSNode equivalence classes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.7%)  Bitcode Writer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.5%)  Module Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.3%)  Identify Address Taken Functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.2%)  Smack - Data Structure Analysis Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.2%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.2%)  Flow  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.2%)  Allocator Identification Analysis (find malloc/free wrappers)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.1%)  Control Dependency Graph
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Data Structure Analysis Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Debug Info Verifier
   0.0400 (100.0%)   0.0400 (100.0%)   0.0376 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0040 seconds (0.0194 wall clock)

   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0040 (100.0%)   0.0040 (100.0%)   0.0194 (100.0%)  Parse IR
   0.0040 (100.0%)   0.0040 (100.0%)   0.0194 (100.0%)  Total

building program dependency graph...
Done, please enter /visualization and view
