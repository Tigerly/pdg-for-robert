digraph "Program Dependency Graph for 'test' function" {
	label="Program Dependency Graph for 'test' function";

	Node0x39afab0 [shape=record,label="{\<\<ENTRY\>\> foo}"];
	Node0x39afab0 -> Node0x39afb40;
	Node0x39afb40 [shape=record,label="{  ret i32 1}"];
	Node0x39b00f0 [shape=record,label="{\<\<ENTRY\>\> goo}"];
	Node0x39b00f0 -> Node0x39b0190;
	Node0x39b0190 [shape=record,label="{  ret i32 2}"];
	Node0x39b1310 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x39b1310 -> Node0x39b0160[style=dotted,label = "{DEF_USE}" ];
	Node0x39b0160 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x39b13c0 [shape=record,label="{  %b.addr = alloca float, align 4}"];
	Node0x39b13c0 -> Node0x39b1430[style=dotted,label = "{DEF_USE}" ];
	Node0x39b1430 [shape=record,label="{  store float %b, float* %b.addr, align 4}"];
	Node0x39b14a0 [shape=record,label="{\<\<ENTRY\>\> test}"];
	Node0x39b14a0 -> Node0x39b1310;
	Node0x39b14a0 -> Node0x39b13c0;
	Node0x39b14a0 -> Node0x39b0160;
	Node0x39b14a0 -> Node0x39b1430;
	Node0x39b14a0 -> Node0x39b15c0;
	Node0x39b14a0 -> Node0x39b63c0[style=dashed];
	Node0x39b14a0 -> Node0x39b6430[style=dashed];
	Node0x39b14a0 -> Node0x39b64f0[style=dashed];
	Node0x39b14a0 -> Node0x39b6560[style=dashed];
	Node0x39b15c0 [shape=record,label="{  ret float 3.000000e+00}"];
	Node0x39b15c0 -> Node0x39b6c50[style=dotted];
	Node0x39b4e00 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x39b4e00 -> Node0x39b5030[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5030 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x39b50a0 [shape=record,label="{  %x = alloca i32, align 4}"];
	Node0x39b50a0 -> Node0x39b5110[style=dotted,label = "{DEF_USE}" ];
	Node0x39b50a0 -> Node0x39b5180[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5110 [shape=record,label="{  store i32 0, i32* %x, align 4}"];
	Node0x39b5110 -> Node0x39b5180[style=dotted,label = "{RAW} x"];
	Node0x39b5180 [shape=record,label="{  %0 = load i32* %x, align 4}"];
	Node0x39b5180 -> Node0x39b54f0[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5220 [shape=record,label="{  %p = alloca i32 ()*, align 8}"];
	Node0x39b5220 -> Node0x39b5290[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5220 -> Node0x39b1510[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5220 -> Node0x39b5440[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5220 -> Node0x39b5410[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5290 [shape=record,label="{  store i32 ()* @foo, i32 ()** %p, align 8}"];
	Node0x39b5290 -> Node0x39b5440[style=dotted,label = "{RAW} p"];
	Node0x39b5290 -> Node0x39b5410[style=dotted,label = "{RAW} p"];
	Node0x39b1510 [shape=record,label="{  store i32 ()* @goo, i32 ()** %p, align 8}"];
	Node0x39b1510 -> Node0x39b5440[style=dotted,label = "{RAW} p"];
	Node0x39b1510 -> Node0x39b5410[style=dotted,label = "{RAW} p"];
	Node0x39b5440 [shape=record,label="{  %1 = load i32 ()** %p, align 8}"];
	Node0x39b5440 -> Node0x39b5760[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5410 [shape=record,label="{  %2 = load i32 ()** %p, align 8}"];
	Node0x39b5410 -> Node0x39b57d0[style=dotted,label = "{DEF_USE}" ];
	Node0x39b54f0 [shape=record,label="{  %tobool = icmp ne i32 %0, 0}"];
	Node0x39b54f0 -> Node0x39b5560[style=dotted,label = "{DEF_USE}" ];
	Node0x39b5560 [shape=record,label="{  br i1 %tobool, label %if.then, label %if.else}"];
	Node0x39b5560 -> Node0x39b5290;
	Node0x39b5560 -> Node0x39b55d0;
	Node0x39b5560 -> Node0x39b1510;
	Node0x39b5560 -> Node0x39b5640;
	Node0x39b55d0 [shape=record,label="{  br label %if.end}"];
	Node0x39b5640 [shape=record,label="{  br label %if.end}"];
	Node0x39b5760 [shape=record,label="{  %call = call i32 %1()}"];
	Node0x39b57d0 [shape=record,label="{  %call1 = call i32 %2()}"];
	Node0x39b63c0 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x39b63c0 -> Node0x39b6430[style=dashed];
	Node0x39b63c0 -> Node0x39b0160[style=dotted];
	Node0x39b6430 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x39b6430 -> Node0x39b6d80[style=dashed];
	Node0x39b64f0 [shape=record,label="{FORMAL_IN:float}"];
	Node0x39b64f0 -> Node0x39b6560[style=dashed];
	Node0x39b64f0 -> Node0x39b1430[style=dotted];
	Node0x39b6560 [shape=record,label="{FORMAL_OUT:float}"];
	Node0x39b6560 -> Node0x39b5390[style=dashed];
	Node0x39b6c50 [shape=record,label="{  %call3 = call float @test(i32 2, float 0x40091EB860000000)}"];
	Node0x39b6c50 -> Node0x39b14a0;
	Node0x39b6c50 -> Node0x39b6ce0[style=dashed];
	Node0x39b6c50 -> Node0x39b6d80[style=dashed];
	Node0x39b6c50 -> Node0x39b6d50[style=dashed];
	Node0x39b6c50 -> Node0x39b5390[style=dashed];
	Node0x39b6ce0 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x39b6ce0 -> Node0x39b63c0[style=dashed];
	Node0x39b6d80 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x39b6d80 -> Node0x39b5180[style=dotted];
	Node0x39b6d50 [shape=record,label="{ACTUAL_IN:float}"];
	Node0x39b6d50 -> Node0x39b64f0[style=dashed];
	Node0x39b5390 [shape=record,label="{ACTUAL_OUT:float}"];
	Node0x39b5320 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x39b5320 -> Node0x39b4e00;
	Node0x39b5320 -> Node0x39b50a0;
	Node0x39b5320 -> Node0x39b5220;
	Node0x39b5320 -> Node0x39b5030;
	Node0x39b5320 -> Node0x39b5110;
	Node0x39b5320 -> Node0x39b5180;
	Node0x39b5320 -> Node0x39b54f0;
	Node0x39b5320 -> Node0x39b5560;
	Node0x39b5320 -> Node0x39b5440;
	Node0x39b5320 -> Node0x39b5760;
	Node0x39b5320 -> Node0x39b5410;
	Node0x39b5320 -> Node0x39b57d0;
	Node0x39b5320 -> Node0x39b7150;
	Node0x39b5320 -> Node0x39b6c50;
	Node0x39b5320 -> Node0x39b7210;
	Node0x39b7150 [shape=record,label="{  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i32 %call1)}"];
	Node0x39b7210 [shape=record,label="{  ret i32 0}"];
}
