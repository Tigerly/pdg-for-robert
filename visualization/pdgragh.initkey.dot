digraph "Program Dependency Graph for 'initkey' function" {
	label="Program Dependency Graph for 'initkey' function";

	Node0x2da2eb0 [shape=record,label="{  %str.addr = alloca i8*, align 8}"];
	Node0x2da2eb0 -> Node0x2da2f20[style=dotted,label = "{DEF_USE}" ];
	Node0x2da2eb0 -> Node0x2da2f90[style=dotted,label = "{DEF_USE}" ];
	Node0x2da2f20 [shape=record,label="{  store i8* %str, i8** %str.addr, align 8}"];
	Node0x2da2f20 -> Node0x2da2f90[style=dotted,label = "{RAW} str.addr"];
	Node0x2da2f90 [shape=record,label="{  %0 = load i8** %str.addr, align 8}"];
	Node0x2da2f90 -> Node0x2da3060[style=dotted,label = "{DEF_USE}" ];
	Node0x2da2f90 -> Node0x2db6ba0[style=dotted];
	Node0x2da3060 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str, i32 0, i32 0), i8* %0)}"];
	Node0x2da30d0 [shape=record,label="{\<\<ENTRY\>\> greeter}"];
	Node0x2da30d0 -> Node0x2da2eb0;
	Node0x2da30d0 -> Node0x2da2f20;
	Node0x2da30d0 -> Node0x2da2f90;
	Node0x2da30d0 -> Node0x2da3060;
	Node0x2da30d0 -> Node0x2da3000;
	Node0x2da30d0 -> Node0x2db6b30[style=dashed];
	Node0x2da30d0 -> Node0x2db6ba0[style=dashed];
	Node0x2da3000 [shape=record,label="{  ret void}"];
	Node0x2da7e60 [shape=record,label="{  %username.addr = alloca i8*, align 8}"];
	Node0x2da7e60 -> Node0x2da7ed0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da7ed0 [shape=record,label="{  store i8* %username, i8** %username.addr, align 8}"];
	Node0x2da7f40 [shape=record,label="{GLOBAL_VALUE:@i = common global i32 0, align 4}"];
	Node0x2da7f40 -> Node0x2da8040[style=dotted];
	Node0x2da7f40 -> Node0x2da80b0[style=dotted];
	Node0x2da7f40 -> Node0x2da8230[style=dotted];
	Node0x2da7f40 -> Node0x2db08f0[style=dotted];
	Node0x2da7f40 -> Node0x2db0960[style=dotted];
	Node0x2da7f40 -> Node0x2db0b00[style=dotted];
	Node0x2da7f40 -> Node0x2db0c10[style=dotted];
	Node0x2da7f40 -> Node0x2db0d60[style=dotted];
	Node0x2da8040 [shape=record,label="{  %1 = load i32* @i, align 4}"];
	Node0x2da8040 -> Node0x2da86c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8040 -> Node0x2db7f70[style=dotted];
	Node0x2da80b0 [shape=record,label="{  %3 = load i32* @i, align 4}"];
	Node0x2da80b0 -> Node0x2da8800[style=dotted,label = "{DEF_USE}" ];
	Node0x2da80b0 -> Node0x2db7f70[style=dotted];
	Node0x2da8150 [shape=record,label="{GLOBAL_VALUE:@key = common global i8* null, align 8}"];
	Node0x2da8150 -> Node0x2da81c0[style=dotted];
	Node0x2da8150 -> Node0x2db0b70[style=dotted];
	Node0x2da81c0 [shape=record,label="{  %4 = load i8** @key, align 8}"];
	Node0x2da81c0 -> Node0x2da8950[style=dotted,label = "{DEF_USE}" ];
	Node0x2da81c0 -> Node0x2db7f00[style=dotted];
	Node0x2da8230 [shape=record,label="{  %5 = load i32* @i, align 4}"];
	Node0x2da8230 -> Node0x2da8b40[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8230 -> Node0x2db7f70[style=dotted];
	Node0x2da8120 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x2da8120 -> Node0x2da82e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8120 -> Node0x2da8350[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8120 -> Node0x2da7fe0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da82e0 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x2da82e0 -> Node0x2da8350[style=dotted,label = "{RAW} sz.addr"];
	Node0x2da82e0 -> Node0x2da7fe0[style=dotted,label = "{RAW} sz.addr"];
	Node0x2da8350 [shape=record,label="{  %0 = load i32* %sz.addr, align 4}"];
	Node0x2da8350 -> Node0x2da8010[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8350 -> Node0x2db7f70[style=dotted];
	Node0x2da7fe0 [shape=record,label="{  %2 = load i32* %sz.addr, align 4}"];
	Node0x2da7fe0 -> Node0x2da86c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da7fe0 -> Node0x2db7f70[style=dotted];
	Node0x2da8010 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x2da8010 -> Node0x2da8550[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8550 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #3}"];
	Node0x2da85c0 [shape=record,label="{  store i8* %call, i8** @key, align 8}"];
	Node0x2da85c0 -> Node0x2da81c0[style=dotted,label = "{RAW} key"];
	Node0x2da8630 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x2da8630 -> Node0x2da8040[style=dotted,label = "{RAW} i"];
	Node0x2da8630 -> Node0x2da80b0[style=dotted,label = "{RAW} i"];
	Node0x2da8630 -> Node0x2da8230[style=dotted,label = "{RAW} i"];
	Node0x2da86c0 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x2da86c0 -> Node0x2da8750[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8750 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x2da8750 -> Node0x2da8040;
	Node0x2da8750 -> Node0x2da7fe0;
	Node0x2da8750 -> Node0x2da86c0;
	Node0x2da8750 -> Node0x2da8750;
	Node0x2da8750 -> Node0x2da80b0;
	Node0x2da8750 -> Node0x2da8800;
	Node0x2da8750 -> Node0x2da81c0;
	Node0x2da8750 -> Node0x2da8950;
	Node0x2da8750 -> Node0x2da89c0;
	Node0x2da8750 -> Node0x2da8880;
	Node0x2da8750 -> Node0x2da8230;
	Node0x2da8750 -> Node0x2da8b40;
	Node0x2da8750 -> Node0x2da8bb0;
	Node0x2da8750 -> Node0x2da8c20;
	Node0x2da8800 [shape=record,label="{  %idxprom = zext i32 %3 to i64}"];
	Node0x2da8800 -> Node0x2da8950[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8950 [shape=record,label="{  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom}"];
	Node0x2da8950 -> Node0x2da89c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da89c0 [shape=record,label="{  store i8 112, i8* %arrayidx, align 1}"];
	Node0x2da89c0 -> Node0x2da8040[style=dotted,label = "{RAW} i"];
	Node0x2da89c0 -> Node0x2da80b0[style=dotted,label = "{RAW} i"];
	Node0x2da89c0 -> Node0x2da81c0[style=dotted,label = "{RAW} key"];
	Node0x2da89c0 -> Node0x2da8230[style=dotted,label = "{RAW} i"];
	Node0x2da8880 [shape=record,label="{  br label %for.inc}"];
	Node0x2da8b40 [shape=record,label="{  %inc = add i32 %5, 1}"];
	Node0x2da8b40 -> Node0x2da8bb0[style=dotted,label = "{DEF_USE}" ];
	Node0x2da8bb0 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x2da8bb0 -> Node0x2da8040[style=dotted,label = "{RAW} i"];
	Node0x2da8bb0 -> Node0x2da80b0[style=dotted,label = "{RAW} i"];
	Node0x2da8bb0 -> Node0x2da8230[style=dotted,label = "{RAW} i"];
	Node0x2da8c20 [shape=record,label="{  br label %for.cond}"];
	Node0x2da8cf0 [shape=record,label="{\<\<ENTRY\>\> initkey}"];
	Node0x2da8cf0 -> Node0x2da7e60;
	Node0x2da8cf0 -> Node0x2da8120;
	Node0x2da8cf0 -> Node0x2da7ed0;
	Node0x2da8cf0 -> Node0x2da82e0;
	Node0x2da8cf0 -> Node0x2da8350;
	Node0x2da8cf0 -> Node0x2da8010;
	Node0x2da8cf0 -> Node0x2da8550;
	Node0x2da8cf0 -> Node0x2da85c0;
	Node0x2da8cf0 -> Node0x2da8630;
	Node0x2da8cf0 -> Node0x2da8df0;
	Node0x2da8cf0 -> Node0x2da8040;
	Node0x2da8cf0 -> Node0x2da7fe0;
	Node0x2da8cf0 -> Node0x2da86c0;
	Node0x2da8cf0 -> Node0x2da8750;
	Node0x2da8cf0 -> Node0x2da8eb0;
	Node0x2da8cf0 -> Node0x2db7e90[style=dashed];
	Node0x2da8cf0 -> Node0x2db7f00[style=dashed];
	Node0x2da8cf0 -> Node0x2da8fa0[style=dashed];
	Node0x2da8cf0 -> Node0x2db7f70[style=dashed];
	Node0x2da8df0 [shape=record,label="{  br label %for.cond}"];
	Node0x2da8eb0 [shape=record,label="{  ret void}"];
	Node0x2db0810 [shape=record,label="{  %plaintext.addr = alloca i8*, align 8}"];
	Node0x2db0810 -> Node0x2db0880[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0810 -> Node0x2db0a60[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0880 [shape=record,label="{  store i8* %plaintext, i8** %plaintext.addr, align 8}"];
	Node0x2db0880 -> Node0x2db0a60[style=dotted,label = "{RAW} plaintext.addr"];
	Node0x2db08f0 [shape=record,label="{  %1 = load i32* @i, align 4}"];
	Node0x2db08f0 -> Node0x2db12b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db08f0 -> Node0x2db9980[style=dotted];
	Node0x2db0960 [shape=record,label="{  %3 = load i32* @i, align 4}"];
	Node0x2db0960 -> Node0x2db14b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0960 -> Node0x2db9980[style=dotted];
	Node0x2db0a60 [shape=record,label="{  %4 = load i8** %plaintext.addr, align 8}"];
	Node0x2db0a60 -> Node0x2db15b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0a60 -> Node0x2db98a0[style=dotted];
	Node0x2db0b00 [shape=record,label="{  %6 = load i32* @i, align 4}"];
	Node0x2db0b00 -> Node0x2db1730[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0b00 -> Node0x2db9980[style=dotted];
	Node0x2db0b70 [shape=record,label="{  %7 = load i8** @key, align 8}"];
	Node0x2db0b70 -> Node0x2db17a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0b70 -> Node0x2db98a0[style=dotted];
	Node0x2db0c10 [shape=record,label="{  %9 = load i32* @i, align 4}"];
	Node0x2db0c10 -> Node0x2db12e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0c10 -> Node0x2db9980[style=dotted];
	Node0x2db0c80 [shape=record,label="{GLOBAL_VALUE:@ciphertext = common global i8* null, align 8}"];
	Node0x2db0c80 -> Node0x2db0cf0[style=dotted];
	Node0x2db0cf0 [shape=record,label="{  %10 = load i8** @ciphertext, align 8}"];
	Node0x2db0cf0 -> Node0x2db16d0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0cf0 -> Node0x2db98a0[style=dotted];
	Node0x2db0d60 [shape=record,label="{  %11 = load i32* @i, align 4}"];
	Node0x2db0d60 -> Node0x2da9100[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0d60 -> Node0x2db9980[style=dotted];
	Node0x2db0dd0 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x2db0dd0 -> Node0x2db0e40[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0dd0 -> Node0x2db0eb0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0dd0 -> Node0x2db0f50[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0e40 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x2db0e40 -> Node0x2db0eb0[style=dotted,label = "{RAW} sz.addr"];
	Node0x2db0e40 -> Node0x2db0f50[style=dotted,label = "{RAW} sz.addr"];
	Node0x2db0eb0 [shape=record,label="{  %0 = load i32* %sz.addr, align 4}"];
	Node0x2db0eb0 -> Node0x2db0fc0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0eb0 -> Node0x2db9980[style=dotted];
	Node0x2db0f50 [shape=record,label="{  %2 = load i32* %sz.addr, align 4}"];
	Node0x2db0f50 -> Node0x2db12b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db0f50 -> Node0x2db9980[style=dotted];
	Node0x2db0fc0 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x2db0fc0 -> Node0x2db1030[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1030 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #3}"];
	Node0x2db10a0 [shape=record,label="{  store i8* %call, i8** @ciphertext, align 8}"];
	Node0x2db10a0 -> Node0x2db1110[style=dotted,label = "{RAW} arrayidx"];
	Node0x2db10a0 -> Node0x2db1180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x2db10a0 -> Node0x2db0cf0[style=dotted,label = "{RAW} ciphertext"];
	Node0x2db1110 [shape=record,label="{  %5 = load i8* %arrayidx, align 1}"];
	Node0x2db1110 -> Node0x2db14e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1180 [shape=record,label="{  %8 = load i8* %arrayidx4, align 1}"];
	Node0x2db1180 -> Node0x2db1810[style=dotted,label = "{DEF_USE}" ];
	Node0x2db11f0 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x2db11f0 -> Node0x2db08f0[style=dotted,label = "{RAW} i"];
	Node0x2db11f0 -> Node0x2db0960[style=dotted,label = "{RAW} i"];
	Node0x2db11f0 -> Node0x2db1110[style=dotted,label = "{RAW} arrayidx"];
	Node0x2db11f0 -> Node0x2db0b00[style=dotted,label = "{RAW} i"];
	Node0x2db11f0 -> Node0x2db1180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x2db11f0 -> Node0x2db0c10[style=dotted,label = "{RAW} i"];
	Node0x2db11f0 -> Node0x2db0d60[style=dotted,label = "{RAW} i"];
	Node0x2db12b0 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x2db12b0 -> Node0x2db1400[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1400 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x2db1400 -> Node0x2db08f0;
	Node0x2db1400 -> Node0x2db0f50;
	Node0x2db1400 -> Node0x2db12b0;
	Node0x2db1400 -> Node0x2db1400;
	Node0x2db1400 -> Node0x2db0960;
	Node0x2db1400 -> Node0x2db14b0;
	Node0x2db1400 -> Node0x2db0a60;
	Node0x2db1400 -> Node0x2db15b0;
	Node0x2db1400 -> Node0x2db1110;
	Node0x2db1400 -> Node0x2db14e0;
	Node0x2db1400 -> Node0x2db0b00;
	Node0x2db1400 -> Node0x2db1730;
	Node0x2db1400 -> Node0x2db0b70;
	Node0x2db1400 -> Node0x2db17a0;
	Node0x2db1400 -> Node0x2db1180;
	Node0x2db1400 -> Node0x2db1810;
	Node0x2db1400 -> Node0x2db1880;
	Node0x2db1400 -> Node0x2db1620;
	Node0x2db1400 -> Node0x2db0c10;
	Node0x2db1400 -> Node0x2db12e0;
	Node0x2db1400 -> Node0x2db0cf0;
	Node0x2db1400 -> Node0x2db16d0;
	Node0x2db1400 -> Node0x2db1700;
	Node0x2db1400 -> Node0x2da9090;
	Node0x2db1400 -> Node0x2db0d60;
	Node0x2db1400 -> Node0x2da9100;
	Node0x2db1400 -> Node0x2da9170;
	Node0x2db1400 -> Node0x2da91e0;
	Node0x2db14b0 [shape=record,label="{  %idxprom = zext i32 %3 to i64}"];
	Node0x2db14b0 -> Node0x2db15b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db15b0 [shape=record,label="{  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom}"];
	Node0x2db15b0 -> Node0x2db1110[style=dotted,label = "{DEF_USE}" ];
	Node0x2db14e0 [shape=record,label="{  %conv2 = sext i8 %5 to i32}"];
	Node0x2db14e0 -> Node0x2db1880[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1730 [shape=record,label="{  %idxprom3 = zext i32 %6 to i64}"];
	Node0x2db1730 -> Node0x2db17a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db17a0 [shape=record,label="{  %arrayidx4 = getelementptr inbounds i8* %7, i64 %idxprom3}"];
	Node0x2db17a0 -> Node0x2db1180[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1810 [shape=record,label="{  %conv5 = sext i8 %8 to i32}"];
	Node0x2db1810 -> Node0x2db1880[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1880 [shape=record,label="{  %xor = xor i32 %conv2, %conv5}"];
	Node0x2db1880 -> Node0x2db1620[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1620 [shape=record,label="{  %conv6 = trunc i32 %xor to i8}"];
	Node0x2db1620 -> Node0x2db1700[style=dotted,label = "{DEF_USE}" ];
	Node0x2db12e0 [shape=record,label="{  %idxprom7 = zext i32 %9 to i64}"];
	Node0x2db12e0 -> Node0x2db16d0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db16d0 [shape=record,label="{  %arrayidx8 = getelementptr inbounds i8* %10, i64 %idxprom7}"];
	Node0x2db16d0 -> Node0x2db1700[style=dotted,label = "{DEF_USE}" ];
	Node0x2db1700 [shape=record,label="{  store i8 %conv6, i8* %arrayidx8, align 1}"];
	Node0x2db1700 -> Node0x2db08f0[style=dotted,label = "{RAW} i"];
	Node0x2db1700 -> Node0x2db0960[style=dotted,label = "{RAW} i"];
	Node0x2db1700 -> Node0x2db0b00[style=dotted,label = "{RAW} i"];
	Node0x2db1700 -> Node0x2db0b70[style=dotted,label = "{RAW} key"];
	Node0x2db1700 -> Node0x2db0c10[style=dotted,label = "{RAW} i"];
	Node0x2db1700 -> Node0x2db0cf0[style=dotted,label = "{RAW} ciphertext"];
	Node0x2db1700 -> Node0x2db0d60[style=dotted,label = "{RAW} i"];
	Node0x2da9090 [shape=record,label="{  br label %for.inc}"];
	Node0x2da9100 [shape=record,label="{  %inc = add i32 %11, 1}"];
	Node0x2da9100 -> Node0x2da9170[style=dotted,label = "{DEF_USE}" ];
	Node0x2da9170 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x2da9170 -> Node0x2db08f0[style=dotted,label = "{RAW} i"];
	Node0x2da9170 -> Node0x2db0960[style=dotted,label = "{RAW} i"];
	Node0x2da9170 -> Node0x2db1110[style=dotted,label = "{RAW} arrayidx"];
	Node0x2da9170 -> Node0x2db0b00[style=dotted,label = "{RAW} i"];
	Node0x2da9170 -> Node0x2db1180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x2da9170 -> Node0x2db0c10[style=dotted,label = "{RAW} i"];
	Node0x2da9170 -> Node0x2db0d60[style=dotted,label = "{RAW} i"];
	Node0x2da91e0 [shape=record,label="{  br label %for.cond}"];
	Node0x2db2150 [shape=record,label="{\<\<ENTRY\>\> encrypt}"];
	Node0x2db2150 -> Node0x2db0810;
	Node0x2db2150 -> Node0x2db0dd0;
	Node0x2db2150 -> Node0x2db0880;
	Node0x2db2150 -> Node0x2db0e40;
	Node0x2db2150 -> Node0x2db0eb0;
	Node0x2db2150 -> Node0x2db0fc0;
	Node0x2db2150 -> Node0x2db1030;
	Node0x2db2150 -> Node0x2db10a0;
	Node0x2db2150 -> Node0x2db11f0;
	Node0x2db2150 -> Node0x2db2370;
	Node0x2db2150 -> Node0x2db08f0;
	Node0x2db2150 -> Node0x2db0f50;
	Node0x2db2150 -> Node0x2db12b0;
	Node0x2db2150 -> Node0x2db1400;
	Node0x2db2150 -> Node0x2db23e0;
	Node0x2db2150 -> Node0x2db9830[style=dashed];
	Node0x2db2150 -> Node0x2db98a0[style=dashed];
	Node0x2db2150 -> Node0x2db9910[style=dashed];
	Node0x2db2150 -> Node0x2db9980[style=dashed];
	Node0x2db2370 [shape=record,label="{  br label %for.cond}"];
	Node0x2db23e0 [shape=record,label="{  ret void}"];
	Node0x2db6060 [shape=record,label="{  %username = alloca [20 x i8], align 16}"];
	Node0x2db6060 -> Node0x2db60d0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6060 -> Node0x2db6140[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6060 -> Node0x2db61e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db60d0 [shape=record,label="{  %arraydecay = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x2db60d0 -> Node0x2db64a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6140 [shape=record,label="{  %arraydecay2 = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x2db6140 -> Node0x2db6510[style=dotted,label = "{DEF_USE}" ];
	Node0x2db61e0 [shape=record,label="{  %arraydecay6 = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x2db61e0 -> Node0x2db7180[style=dotted,label = "{DEF_USE}" ];
	Node0x2db61b0 [shape=record,label="{  %plaintext = alloca [1024 x i8], align 16}"];
	Node0x2db61b0 -> Node0x2db6290[style=dotted,label = "{DEF_USE}" ];
	Node0x2db61b0 -> Node0x2db6300[style=dotted,label = "{DEF_USE}" ];
	Node0x2db61b0 -> Node0x2db63a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db61b0 -> Node0x2db6370[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6290 [shape=record,label="{  %arraydecay4 = getelementptr inbounds [1024 x i8]* %plaintext, i32 0, i32 0}"];
	Node0x2db6290 -> Node0x2db6fe0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6300 [shape=record,label="{  %arraydecay7 = getelementptr inbounds [1024 x i8]* %plaintext, i32 0, i32 0}"];
	Node0x2db6300 -> Node0x2db7210[style=dotted,label = "{DEF_USE}" ];
	Node0x2db63a0 [shape=record,label="{  %arraydecay9 = getelementptr inbounds [1024 x i8]* %plaintext, i32 0, i32 0}"];
	Node0x2db63a0 -> Node0x2db89e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db6370 [shape=record,label="{  %arraydecay10 = getelementptr inbounds [1024 x i8]* %plaintext, i32 0, i32 0}"];
	Node0x2db6370 -> Node0x2db8bb0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db64a0 [shape=record,label="{  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0), i8* %arraydecay)}"];
	Node0x2db6510 [shape=record,label="{  call void @greeter(i8* %arraydecay2)}"];
	Node0x2db6510 -> Node0x2da30d0;
	Node0x2db6510 -> Node0x2db6f70[style=dashed];
	Node0x2db6510 -> Node0x2db7010[style=dashed];
	Node0x2db6b30 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x2db6b30 -> Node0x2db6ba0[style=dashed];
	Node0x2db6b30 -> Node0x2da2f20[style=dotted];
	Node0x2db6ba0 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x2db6ba0 -> Node0x2db7010[style=dashed];
	Node0x2db6f70 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x2db6f70 -> Node0x2db6b30[style=dashed];
	Node0x2db7010 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x2db6fe0 [shape=record,label="{  %call5 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8]* @.str4, i32 0, i32 0), i8* %arraydecay4)}"];
	Node0x2db7180 [shape=record,label="{  call void @initkey(i8* %arraydecay6, i32 %conv)}"];
	Node0x2db7180 -> Node0x2da8cf0;
	Node0x2db7180 -> Node0x2db88b0[style=dashed];
	Node0x2db7180 -> Node0x2db8950[style=dashed];
	Node0x2db7180 -> Node0x2db8920[style=dashed];
	Node0x2db7180 -> Node0x2db8a50[style=dashed];
	Node0x2db7210 [shape=record,label="{  %call8 = call i64 @strlen(i8* %arraydecay7)}"];
	Node0x2db72a0 [shape=record,label="{  %conv = trunc i64 %call8 to i32}"];
	Node0x2db72a0 -> Node0x2db7180[style=dotted,label = "{DEF_USE}" ];
	Node0x2db7e90 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x2db7e90 -> Node0x2db7f00[style=dashed];
	Node0x2db7e90 -> Node0x2da7ed0[style=dotted];
	Node0x2db7e90 -> Node0x2da85c0[style=dotted];
	Node0x2db7f00 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x2db7f00 -> Node0x2db8950[style=dashed];
	Node0x2da8fa0 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2da8fa0 -> Node0x2db7f70[style=dashed];
	Node0x2da8fa0 -> Node0x2da82e0[style=dotted];
	Node0x2da8fa0 -> Node0x2da8630[style=dotted];
	Node0x2da8fa0 -> Node0x2da8bb0[style=dotted];
	Node0x2db7f70 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x2db7f70 -> Node0x2db8a50[style=dashed];
	Node0x2db88b0 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x2db88b0 -> Node0x2db7e90[style=dashed];
	Node0x2db8950 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x2db8920 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2db8920 -> Node0x2da8fa0[style=dashed];
	Node0x2db8a50 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2db89e0 [shape=record,label="{  call void @encrypt(i8* %arraydecay9, i32 %conv12)}"];
	Node0x2db89e0 -> Node0x2db2150;
	Node0x2db89e0 -> Node0x2dba340[style=dashed];
	Node0x2db89e0 -> Node0x2dba3e0[style=dashed];
	Node0x2db89e0 -> Node0x2dba3b0[style=dashed];
	Node0x2db89e0 -> Node0x2dba4a0[style=dashed];
	Node0x2db8bb0 [shape=record,label="{  %call11 = call i64 @strlen(i8* %arraydecay10)}"];
	Node0x2db8c40 [shape=record,label="{  %conv12 = trunc i64 %call11 to i32}"];
	Node0x2db8c40 -> Node0x2db89e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2db9830 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x2db9830 -> Node0x2db98a0[style=dashed];
	Node0x2db9830 -> Node0x2db0880[style=dotted];
	Node0x2db9830 -> Node0x2db10a0[style=dotted];
	Node0x2db98a0 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x2db98a0 -> Node0x2dba3e0[style=dashed];
	Node0x2db9910 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2db9910 -> Node0x2db9980[style=dashed];
	Node0x2db9910 -> Node0x2db0e40[style=dotted];
	Node0x2db9910 -> Node0x2db11f0[style=dotted];
	Node0x2db9910 -> Node0x2da9170[style=dotted];
	Node0x2db9980 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x2db9980 -> Node0x2dba4a0[style=dashed];
	Node0x2dba340 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x2dba340 -> Node0x2db9830[style=dashed];
	Node0x2dba3e0 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x2dba3b0 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2dba3b0 -> Node0x2db9910[style=dashed];
	Node0x2dba4a0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2dba450 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x2dba450 -> Node0x2db6060;
	Node0x2dba450 -> Node0x2db61b0;
	Node0x2dba450 -> Node0x2dba680;
	Node0x2dba450 -> Node0x2db60d0;
	Node0x2dba450 -> Node0x2db64a0;
	Node0x2dba450 -> Node0x2db6140;
	Node0x2dba450 -> Node0x2db6510;
	Node0x2dba450 -> Node0x2dba650;
	Node0x2dba450 -> Node0x2db6290;
	Node0x2dba450 -> Node0x2db6fe0;
	Node0x2dba450 -> Node0x2db61e0;
	Node0x2dba450 -> Node0x2db6300;
	Node0x2dba450 -> Node0x2db7210;
	Node0x2dba450 -> Node0x2db72a0;
	Node0x2dba450 -> Node0x2db7180;
	Node0x2dba450 -> Node0x2db63a0;
	Node0x2dba450 -> Node0x2db6370;
	Node0x2dba450 -> Node0x2db8bb0;
	Node0x2dba450 -> Node0x2db8c40;
	Node0x2dba450 -> Node0x2db89e0;
	Node0x2dba450 -> Node0x2dba740;
	Node0x2dba680 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str1, i32 0, i32 0))}"];
	Node0x2dba650 [shape=record,label="{  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str3, i32 0, i32 0))}"];
	Node0x2dba740 [shape=record,label="{  ret void}"];
}
