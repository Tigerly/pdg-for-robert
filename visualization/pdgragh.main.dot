digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x2bebbe0 [shape=record,label="{\<\<ENTRY\>\> foo}"];
	Node0x2bebbe0 -> Node0x2bebc50;
	Node0x2bebbe0 -> Node0x2bebcc0;
	Node0x2bebc50 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str2, i32 0, i32 0))}"];
	Node0x2bebcc0 [shape=record,label="{  ret void}"];
	Node0x2bed790 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x2bed790 -> Node0x2bed800[style=dotted,label = "{DEF_USE}" ];
	Node0x2bed790 -> Node0x2bebd30[style=dotted,label = "{DEF_USE}" ];
	Node0x2bed800 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x2bed800 -> Node0x2bebd30[style=dotted,label = "{RAW} a.addr"];
	Node0x2bebd30 [shape=record,label="{  %0 = load i32* %a.addr, align 4}"];
	Node0x2bebd30 -> Node0x2bedaf0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bed8e0 [shape=record,label="{  %b.addr = alloca i32, align 4}"];
	Node0x2bed8e0 -> Node0x2bed950[style=dotted,label = "{DEF_USE}" ];
	Node0x2bed8e0 -> Node0x2bed9c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bed950 [shape=record,label="{  store i32 %b, i32* %b.addr, align 4}"];
	Node0x2bed950 -> Node0x2bed9c0[style=dotted,label = "{RAW} b.addr"];
	Node0x2bed9c0 [shape=record,label="{  %1 = load i32* %b.addr, align 4}"];
	Node0x2bed9c0 -> Node0x2bedaf0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bedaf0 [shape=record,label="{  %add = add nsw i32 %0, %1}"];
	Node0x2bedaf0 -> Node0x2bedba0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bedba0 [shape=record,label="{  ret i32 %add}"];
	Node0x2bedc30 [shape=record,label="{\<\<ENTRY\>\> add}"];
	Node0x2bedc30 -> Node0x2bed790;
	Node0x2bedc30 -> Node0x2bed8e0;
	Node0x2bedc30 -> Node0x2bed800;
	Node0x2bedc30 -> Node0x2bed950;
	Node0x2bedc30 -> Node0x2bebd30;
	Node0x2bedc30 -> Node0x2bed9c0;
	Node0x2bedc30 -> Node0x2bedaf0;
	Node0x2bedc30 -> Node0x2bedba0;
	Node0x2bef780 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x2bef780 -> Node0x2bef7f0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bef780 -> Node0x2bef860[style=dotted,label = "{DEF_USE}" ];
	Node0x2bef7f0 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x2bef7f0 -> Node0x2bef860[style=dotted,label = "{RAW} a.addr"];
	Node0x2bef860 [shape=record,label="{  %0 = load i32* %a.addr, align 4}"];
	Node0x2bef860 -> Node0x2befb20[style=dotted,label = "{DEF_USE}" ];
	Node0x2bef900 [shape=record,label="{  %b.addr = alloca i32, align 4}"];
	Node0x2bef900 -> Node0x2bef970[style=dotted,label = "{DEF_USE}" ];
	Node0x2bef900 -> Node0x2beda30[style=dotted,label = "{DEF_USE}" ];
	Node0x2bef970 [shape=record,label="{  store i32 %b, i32* %b.addr, align 4}"];
	Node0x2bef970 -> Node0x2beda30[style=dotted,label = "{RAW} b.addr"];
	Node0x2beda30 [shape=record,label="{  %1 = load i32* %b.addr, align 4}"];
	Node0x2beda30 -> Node0x2befb20[style=dotted,label = "{DEF_USE}" ];
	Node0x2befb20 [shape=record,label="{  %sub = sub nsw i32 %0, %1}"];
	Node0x2befb20 -> Node0x2befb90[style=dotted,label = "{DEF_USE}" ];
	Node0x2befb90 [shape=record,label="{  ret i32 %sub}"];
	Node0x2befc20 [shape=record,label="{\<\<ENTRY\>\> sub}"];
	Node0x2befc20 -> Node0x2bef780;
	Node0x2befc20 -> Node0x2bef900;
	Node0x2befc20 -> Node0x2bef7f0;
	Node0x2befc20 -> Node0x2bef970;
	Node0x2befc20 -> Node0x2bef860;
	Node0x2befc20 -> Node0x2beda30;
	Node0x2befc20 -> Node0x2befb20;
	Node0x2befc20 -> Node0x2befb90;
	Node0x2bf1650 [shape=record,label="{  %a.addr = alloca i32, align 4}"];
	Node0x2bf1650 -> Node0x2bf16c0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf1650 -> Node0x2bf1730[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf16c0 [shape=record,label="{  store i32 %a, i32* %a.addr, align 4}"];
	Node0x2bf16c0 -> Node0x2bf1730[style=dotted,label = "{RAW} a.addr"];
	Node0x2bf1730 [shape=record,label="{  %0 = load i32* %a.addr, align 4}"];
	Node0x2bf1730 -> Node0x2bf1950[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf17d0 [shape=record,label="{  %b.addr = alloca i32, align 4}"];
	Node0x2bf17d0 -> Node0x2bf1840[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf17d0 -> Node0x2bf18b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf1840 [shape=record,label="{  store i32 %b, i32* %b.addr, align 4}"];
	Node0x2bf1840 -> Node0x2bf18b0[style=dotted,label = "{RAW} b.addr"];
	Node0x2bf18b0 [shape=record,label="{  %1 = load i32* %b.addr, align 4}"];
	Node0x2bf18b0 -> Node0x2bf1950[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf1950 [shape=record,label="{  %mul = mul nsw i32 %0, %1}"];
	Node0x2bf1950 -> Node0x2bf1a00[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf1a00 [shape=record,label="{  ret i32 %mul}"];
	Node0x2bf1a00 -> Node0x2bfb820[style=dotted];
	Node0x2bf1a00 -> Node0x2bfc470[style=dotted];
	Node0x2bf1a90 [shape=record,label="{\<\<ENTRY\>\> mult}"];
	Node0x2bf1a90 -> Node0x2bf1650;
	Node0x2bf1a90 -> Node0x2bf17d0;
	Node0x2bf1a90 -> Node0x2bf16c0;
	Node0x2bf1a90 -> Node0x2bf1840;
	Node0x2bf1a90 -> Node0x2bf1730;
	Node0x2bf1a90 -> Node0x2bf18b0;
	Node0x2bf1a90 -> Node0x2bf1950;
	Node0x2bf1a90 -> Node0x2bf1a00;
	Node0x2bf1a90 -> Node0x2bfa9d0[style=dashed];
	Node0x2bf1a90 -> Node0x2bfae50[style=dashed];
	Node0x2bf1a90 -> Node0x2bfae80[style=dashed];
	Node0x2bf1a90 -> Node0x2bf73a0[style=dashed];
	Node0x2bf7c30 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x2bf7c30 -> Node0x2bf7ca0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf7ca0 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x2bf7ca0 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf7ca0 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf7ca0 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf7d10 [shape=record,label="{GLOBAL_VALUE:@gv = global i32 5, align 4}"];
	Node0x2bf7d10 -> Node0x2bf7d80[style=dotted];
	Node0x2bf7d80 [shape=record,label="{  %0 = load i32* @gv, align 4}"];
	Node0x2bf7d80 -> Node0x2bf8e20[style=dotted,label = "{DEF_USE}" ];
	Node0x2befa20 [shape=record,label="{GLOBAL_VALUE:@gv_s = global i32 2017, align 4}"];
	Node0x2befa20 -> Node0x2befa90[style=dotted];
	Node0x2befa90 [shape=record,label="{  %1 = load i32* @gv_s, align 4}"];
	Node0x2befa90 -> Node0x2bf9030[style=dotted,label = "{DEF_USE}" ];
	Node0x2befac0 [shape=record,label="{GLOBAL_VALUE:@pi = global float 0x40091EB860000000, align 4}"];
	Node0x2befac0 -> Node0x2bf8c60[style=dotted];
	Node0x2bf8c60 [shape=record,label="{  %3 = load float* @pi, align 4}"];
	Node0x2bf8c60 -> Node0x2bf9a40[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8cd0 [shape=record,label="{GLOBAL_VALUE:@gtest_1 = common global i32* null, align 8}"];
	Node0x2bf8cd0 -> Node0x2bf8d40[style=dotted];
	Node0x2bf8d40 [shape=record,label="{  %4 = load i32** @gtest_1, align 8}"];
	Node0x2bf8d40 -> Node0x2bf95e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8db0 [shape=record,label="{  %trivial = alloca i32, align 4}"];
	Node0x2bf8db0 -> Node0x2bf8e20[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8db0 -> Node0x2bf8eb0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8e20 [shape=record,label="{  store i32 %0, i32* %trivial, align 4}"];
	Node0x2bf8e20 -> Node0x2bf7d80[style=dotted,label = "{RAW} gv"];
	Node0x2bf8e20 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf8e20 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf8e20 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf8e20 -> Node0x2bf95e0[style=dotted,label = "{RAW} "];
	Node0x2bf8eb0 [shape=record,label="{  store i32* %trivial, i32** @gtest_1, align 8}"];
	Node0x2bf8eb0 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf8eb0 -> Node0x2bf90d0[style=dotted,label = "{RAW} var"];
	Node0x2bf8eb0 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf8eb0 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf8eb0 -> Node0x2bf95e0[style=dotted,label = "{RAW} "];
	Node0x2bf8eb0 -> Node0x2bf9450[style=dotted,label = "{RAW} prod"];
	Node0x2bf8eb0 -> Node0x2bf9610[style=dotted,label = "{RAW} prod2"];
	Node0x2bf8eb0 -> Node0x2bf91d0[style=dotted,label = "{RAW} var"];
	Node0x2bf8f50 [shape=record,label="{  %var = alloca i32, align 4}"];
	Node0x2bf8f50 -> Node0x2bf8fc0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8f50 -> Node0x2bf9030[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8f50 -> Node0x2bf90d0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8f50 -> Node0x2bf90a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8f50 -> Node0x2bf91d0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf8fc0 [shape=record,label="{  %var1 = bitcast i32* %var to i8*}"];
	Node0x2bf8fc0 -> Node0x2bf9860[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9030 [shape=record,label="{  store i32 %1, i32* %var, align 4}"];
	Node0x2bf9030 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf9030 -> Node0x2bf90d0[style=dotted,label = "{RAW} var"];
	Node0x2bf9030 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf9030 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf9030 -> Node0x2bf91d0[style=dotted,label = "{RAW} var"];
	Node0x2bf90d0 [shape=record,label="{  %2 = load i32* %var, align 4}"];
	Node0x2bf90d0 -> Node0x2bf98f0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf90a0 [shape=record,label="{  store i32 %conv2, i32* %var, align 4}"];
	Node0x2bf90a0 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf90a0 -> Node0x2bf90d0[style=dotted,label = "{RAW} var"];
	Node0x2bf90a0 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf90a0 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf90a0 -> Node0x2bf91d0[style=dotted,label = "{RAW} var"];
	Node0x2bf91d0 [shape=record,label="{  %8 = load i32* %var, align 4}"];
	Node0x2bf91d0 -> Node0x2bfc9e0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf92d0 [shape=record,label="{  %prod = alloca i32, align 4}"];
	Node0x2bf92d0 -> Node0x2bf9340[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf92d0 -> Node0x2bf93b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf92d0 -> Node0x2bf9450[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9340 [shape=record,label="{  store i32 0, i32* %prod, align 4}"];
	Node0x2bf9340 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf9340 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf9340 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf9340 -> Node0x2bf9450[style=dotted,label = "{RAW} prod"];
	Node0x2bf93b0 [shape=record,label="{  store i32 %call3, i32* %prod, align 4}"];
	Node0x2bf93b0 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf93b0 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf93b0 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf93b0 -> Node0x2bf9450[style=dotted,label = "{RAW} prod"];
	Node0x2bf9450 [shape=record,label="{  %6 = load i32* %prod, align 4}"];
	Node0x2bf9450 -> Node0x2bfb320[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9420 [shape=record,label="{  %prod2 = alloca i32, align 4}"];
	Node0x2bf9420 -> Node0x2bf9500[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9420 -> Node0x2bf9570[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9420 -> Node0x2bf9610[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9500 [shape=record,label="{  store i32 0, i32* %prod2, align 4}"];
	Node0x2bf9500 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf9500 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf9500 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf9500 -> Node0x2bf9610[style=dotted,label = "{RAW} prod2"];
	Node0x2bf9570 [shape=record,label="{  store i32 %call5, i32* %prod2, align 4}"];
	Node0x2bf9570 -> Node0x2befa90[style=dotted,label = "{RAW} gv_s"];
	Node0x2bf9570 -> Node0x2bf8c60[style=dotted,label = "{RAW} pi"];
	Node0x2bf9570 -> Node0x2bf8d40[style=dotted,label = "{RAW} gtest_1"];
	Node0x2bf9570 -> Node0x2bf9610[style=dotted,label = "{RAW} prod2"];
	Node0x2bf9610 [shape=record,label="{  %7 = load i32* %prod2, align 4}"];
	Node0x2bf9610 -> Node0x2bfc620[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf95e0 [shape=record,label="{  %5 = load i32* %4, align 4}"];
	Node0x2bf95e0 -> Node0x2bf9bc0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9860 [shape=record,label="{  call void @llvm.var.annotation(i8* %var1, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i32 0, i32 0), i32 38)}"];
	Node0x2bf98f0 [shape=record,label="{  %conv = sitofp i32 %2 to float}"];
	Node0x2bf98f0 -> Node0x2bf9a40[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9a40 [shape=record,label="{  %add = fadd float %conv, %3}"];
	Node0x2bf9a40 -> Node0x2bf9af0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9af0 [shape=record,label="{  %conv2 = fptosi float %add to i32}"];
	Node0x2bf9af0 -> Node0x2bf90a0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bf9bc0 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str3, i32 0, i32 0), i32 %5)}"];
	Node0x2bf9920 [shape=record,label="{  call void @foo()}"];
	Node0x2bf9920 -> Node0x2bebbe0;
	Node0x2bfa9d0 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2bfae50 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x2bfae80 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2bf73a0 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x2bfb820 [shape=record,label="{  %call3 = call i32 @mult(i32 3, i32 5)}"];
	Node0x2bfb820 -> Node0x2bf1a90;
	Node0x2bfb820 -> Node0x2bfb210[style=dashed];
	Node0x2bfb820 -> Node0x2bfb2b0[style=dashed];
	Node0x2bfb820 -> Node0x2bfb280[style=dashed];
	Node0x2bfb820 -> Node0x2bfb3b0[style=dashed];
	Node0x2bfb820 -> Node0x2bf93b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2bfb210 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2bfb2b0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2bfb280 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2bfb3b0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2bfb320 [shape=record,label="{  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str4, i32 0, i32 0), i32 %6)}"];
	Node0x2bfc470 [shape=record,label="{  %call5 = call i32 @mult(i32 4, i32 5)}"];
	Node0x2bfc470 -> Node0x2bf1a90;
	Node0x2bfc470 -> Node0x2bfc510[style=dashed];
	Node0x2bfc470 -> Node0x2bfc5b0[style=dashed];
	Node0x2bfc470 -> Node0x2bfc580[style=dashed];
	Node0x2bfc470 -> Node0x2bfc6b0[style=dashed];
	Node0x2bfc470 -> Node0x2bf9570[style=dotted,label = "{DEF_USE}" ];
	Node0x2bfc510 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2bfc5b0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2bfc580 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2bfc6b0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x2bfc620 [shape=record,label="{  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str5, i32 0, i32 0), i32 %7)}"];
	Node0x2bfc9e0 [shape=record,label="{  ret i32 %8}"];
	Node0x2bfca50 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x2bfca50 -> Node0x2bf7c30;
	Node0x2bfca50 -> Node0x2bf8db0;
	Node0x2bfca50 -> Node0x2bf8f50;
	Node0x2bfca50 -> Node0x2bf92d0;
	Node0x2bfca50 -> Node0x2bf9420;
	Node0x2bfca50 -> Node0x2bf7ca0;
	Node0x2bfca50 -> Node0x2bf7d80;
	Node0x2bfca50 -> Node0x2bf8e20;
	Node0x2bfca50 -> Node0x2bf8fc0;
	Node0x2bfca50 -> Node0x2bf9860;
	Node0x2bfca50 -> Node0x2befa90;
	Node0x2bfca50 -> Node0x2bf9030;
	Node0x2bfca50 -> Node0x2bf90d0;
	Node0x2bfca50 -> Node0x2bf98f0;
	Node0x2bfca50 -> Node0x2bf8c60;
	Node0x2bfca50 -> Node0x2bf9a40;
	Node0x2bfca50 -> Node0x2bf9af0;
	Node0x2bfca50 -> Node0x2bf90a0;
	Node0x2bfca50 -> Node0x2bf8eb0;
	Node0x2bfca50 -> Node0x2bf8d40;
	Node0x2bfca50 -> Node0x2bf95e0;
	Node0x2bfca50 -> Node0x2bf9bc0;
	Node0x2bfca50 -> Node0x2bf9920;
	Node0x2bfca50 -> Node0x2bf9340;
	Node0x2bfca50 -> Node0x2bfb820;
	Node0x2bfca50 -> Node0x2bf93b0;
	Node0x2bfca50 -> Node0x2bf9450;
	Node0x2bfca50 -> Node0x2bfb320;
	Node0x2bfca50 -> Node0x2bf9500;
	Node0x2bfca50 -> Node0x2bfc470;
	Node0x2bfca50 -> Node0x2bf9570;
	Node0x2bfca50 -> Node0x2bf9610;
	Node0x2bfca50 -> Node0x2bfc620;
	Node0x2bfca50 -> Node0x2bf91d0;
	Node0x2bfca50 -> Node0x2bfc9e0;
}
