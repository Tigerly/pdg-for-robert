digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x3484e90 [shape=record,label="{  %str.addr = alloca i8*, align 8}"];
	Node0x3484e90 -> Node0x3484f00[style=dotted,label = "{DEF_USE}" ];
	Node0x3484e90 -> Node0x3484f70[style=dotted,label = "{DEF_USE}" ];
	Node0x3484f00 [shape=record,label="{  store i8* %str, i8** %str.addr, align 8}"];
	Node0x3484f00 -> Node0x3484f70[style=dotted,label = "{RAW} str.addr"];
	Node0x3484f70 [shape=record,label="{  %0 = load i8** %str.addr, align 8}"];
	Node0x3484f70 -> Node0x3485040[style=dotted,label = "{DEF_USE}" ];
	Node0x3484f70 -> Node0x3498b50[style=dotted];
	Node0x3485040 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str, i32 0, i32 0), i8* %0)}"];
	Node0x34850b0 [shape=record,label="{\<\<ENTRY\>\> greeter}"];
	Node0x34850b0 -> Node0x3484e90;
	Node0x34850b0 -> Node0x3484f00;
	Node0x34850b0 -> Node0x3484f70;
	Node0x34850b0 -> Node0x3485040;
	Node0x34850b0 -> Node0x3484fe0;
	Node0x34850b0 -> Node0x3498ae0[style=dashed];
	Node0x34850b0 -> Node0x3498b50[style=dashed];
	Node0x3484fe0 [shape=record,label="{  ret void}"];
	Node0x3489e40 [shape=record,label="{  %username.addr = alloca i8*, align 8}"];
	Node0x3489e40 -> Node0x3489eb0[style=dotted,label = "{DEF_USE}" ];
	Node0x3489eb0 [shape=record,label="{  store i8* %username, i8** %username.addr, align 8}"];
	Node0x3489f20 [shape=record,label="{GLOBAL_VALUE:@i = common global i32 0, align 4}"];
	Node0x3489f20 -> Node0x348a020[style=dotted];
	Node0x3489f20 -> Node0x348a090[style=dotted];
	Node0x3489f20 -> Node0x348a210[style=dotted];
	Node0x3489f20 -> Node0x34928d0[style=dotted];
	Node0x3489f20 -> Node0x3492940[style=dotted];
	Node0x3489f20 -> Node0x3492ae0[style=dotted];
	Node0x3489f20 -> Node0x3492bf0[style=dotted];
	Node0x3489f20 -> Node0x3492d40[style=dotted];
	Node0x348a020 [shape=record,label="{  %1 = load i32* @i, align 4}"];
	Node0x348a020 -> Node0x348a6a0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a020 -> Node0x349a0a0[style=dotted];
	Node0x348a090 [shape=record,label="{  %3 = load i32* @i, align 4}"];
	Node0x348a090 -> Node0x348a7e0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a090 -> Node0x349a0a0[style=dotted];
	Node0x348a130 [shape=record,label="{GLOBAL_VALUE:@key = common global i8* null, align 8}"];
	Node0x348a130 -> Node0x348a1a0[style=dotted];
	Node0x348a130 -> Node0x3492b50[style=dotted];
	Node0x348a1a0 [shape=record,label="{  %4 = load i8** @key, align 8}"];
	Node0x348a1a0 -> Node0x348a930[style=dotted,label = "{DEF_USE}" ];
	Node0x348a1a0 -> Node0x3499e20[style=dotted];
	Node0x348a210 [shape=record,label="{  %5 = load i32* @i, align 4}"];
	Node0x348a210 -> Node0x348ab20[style=dotted,label = "{DEF_USE}" ];
	Node0x348a210 -> Node0x349a0a0[style=dotted];
	Node0x348a100 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x348a100 -> Node0x348a2c0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a100 -> Node0x348a330[style=dotted,label = "{DEF_USE}" ];
	Node0x348a100 -> Node0x3489fc0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a2c0 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x348a2c0 -> Node0x348a330[style=dotted,label = "{RAW} sz.addr"];
	Node0x348a2c0 -> Node0x3489fc0[style=dotted,label = "{RAW} sz.addr"];
	Node0x348a330 [shape=record,label="{  %0 = load i32* %sz.addr, align 4}"];
	Node0x348a330 -> Node0x3489ff0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a330 -> Node0x349a0a0[style=dotted];
	Node0x3489fc0 [shape=record,label="{  %2 = load i32* %sz.addr, align 4}"];
	Node0x3489fc0 -> Node0x348a6a0[style=dotted,label = "{DEF_USE}" ];
	Node0x3489fc0 -> Node0x349a0a0[style=dotted];
	Node0x3489ff0 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x3489ff0 -> Node0x348a530[style=dotted,label = "{DEF_USE}" ];
	Node0x348a530 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #3}"];
	Node0x348a5a0 [shape=record,label="{  store i8* %call, i8** @key, align 8}"];
	Node0x348a5a0 -> Node0x348a1a0[style=dotted,label = "{RAW} key"];
	Node0x348a610 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x348a610 -> Node0x348a020[style=dotted,label = "{RAW} i"];
	Node0x348a610 -> Node0x348a090[style=dotted,label = "{RAW} i"];
	Node0x348a610 -> Node0x348a210[style=dotted,label = "{RAW} i"];
	Node0x348a6a0 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x348a6a0 -> Node0x348a730[style=dotted,label = "{DEF_USE}" ];
	Node0x348a730 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x348a730 -> Node0x348a020;
	Node0x348a730 -> Node0x3489fc0;
	Node0x348a730 -> Node0x348a6a0;
	Node0x348a730 -> Node0x348a730;
	Node0x348a730 -> Node0x348a090;
	Node0x348a730 -> Node0x348a7e0;
	Node0x348a730 -> Node0x348a1a0;
	Node0x348a730 -> Node0x348a930;
	Node0x348a730 -> Node0x348a9a0;
	Node0x348a730 -> Node0x348a860;
	Node0x348a730 -> Node0x348a210;
	Node0x348a730 -> Node0x348ab20;
	Node0x348a730 -> Node0x348ab90;
	Node0x348a730 -> Node0x348ac00;
	Node0x348a7e0 [shape=record,label="{  %idxprom = zext i32 %3 to i64}"];
	Node0x348a7e0 -> Node0x348a930[style=dotted,label = "{DEF_USE}" ];
	Node0x348a930 [shape=record,label="{  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom}"];
	Node0x348a930 -> Node0x348a9a0[style=dotted,label = "{DEF_USE}" ];
	Node0x348a9a0 [shape=record,label="{  store i8 97, i8* %arrayidx, align 1}"];
	Node0x348a9a0 -> Node0x348a020[style=dotted,label = "{RAW} i"];
	Node0x348a9a0 -> Node0x348a090[style=dotted,label = "{RAW} i"];
	Node0x348a9a0 -> Node0x348a1a0[style=dotted,label = "{RAW} key"];
	Node0x348a9a0 -> Node0x348a210[style=dotted,label = "{RAW} i"];
	Node0x348a860 [shape=record,label="{  br label %for.inc}"];
	Node0x348ab20 [shape=record,label="{  %inc = add i32 %5, 1}"];
	Node0x348ab20 -> Node0x348ab90[style=dotted,label = "{DEF_USE}" ];
	Node0x348ab90 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x348ab90 -> Node0x348a020[style=dotted,label = "{RAW} i"];
	Node0x348ab90 -> Node0x348a090[style=dotted,label = "{RAW} i"];
	Node0x348ab90 -> Node0x348a210[style=dotted,label = "{RAW} i"];
	Node0x348ac00 [shape=record,label="{  br label %for.cond}"];
	Node0x348acd0 [shape=record,label="{\<\<ENTRY\>\> initkey}"];
	Node0x348acd0 -> Node0x3489e40;
	Node0x348acd0 -> Node0x348a100;
	Node0x348acd0 -> Node0x3489eb0;
	Node0x348acd0 -> Node0x348a2c0;
	Node0x348acd0 -> Node0x348a330;
	Node0x348acd0 -> Node0x3489ff0;
	Node0x348acd0 -> Node0x348a530;
	Node0x348acd0 -> Node0x348a5a0;
	Node0x348acd0 -> Node0x348a610;
	Node0x348acd0 -> Node0x348add0;
	Node0x348acd0 -> Node0x348a020;
	Node0x348acd0 -> Node0x3489fc0;
	Node0x348acd0 -> Node0x348a6a0;
	Node0x348acd0 -> Node0x348a730;
	Node0x348acd0 -> Node0x348ae90;
	Node0x348acd0 -> Node0x3499db0[style=dashed];
	Node0x348acd0 -> Node0x3499e20[style=dashed];
	Node0x348acd0 -> Node0x348af80[style=dashed];
	Node0x348acd0 -> Node0x349a0a0[style=dashed];
	Node0x348add0 [shape=record,label="{  br label %for.cond}"];
	Node0x348ae90 [shape=record,label="{  ret void}"];
	Node0x34927f0 [shape=record,label="{  %plaintext.addr = alloca i8*, align 8}"];
	Node0x34927f0 -> Node0x3492860[style=dotted,label = "{DEF_USE}" ];
	Node0x34927f0 -> Node0x3492a40[style=dotted,label = "{DEF_USE}" ];
	Node0x3492860 [shape=record,label="{  store i8* %plaintext, i8** %plaintext.addr, align 8}"];
	Node0x3492860 -> Node0x3492a40[style=dotted,label = "{RAW} plaintext.addr"];
	Node0x34928d0 [shape=record,label="{  %1 = load i32* @i, align 4}"];
	Node0x34928d0 -> Node0x3493290[style=dotted,label = "{DEF_USE}" ];
	Node0x34928d0 -> Node0x349ba10[style=dotted];
	Node0x3492940 [shape=record,label="{  %3 = load i32* @i, align 4}"];
	Node0x3492940 -> Node0x3493490[style=dotted,label = "{DEF_USE}" ];
	Node0x3492940 -> Node0x349ba10[style=dotted];
	Node0x3492a40 [shape=record,label="{  %4 = load i8** %plaintext.addr, align 8}"];
	Node0x3492a40 -> Node0x3493590[style=dotted,label = "{DEF_USE}" ];
	Node0x3492a40 -> Node0x349b720[style=dotted];
	Node0x3492ae0 [shape=record,label="{  %6 = load i32* @i, align 4}"];
	Node0x3492ae0 -> Node0x3493710[style=dotted,label = "{DEF_USE}" ];
	Node0x3492ae0 -> Node0x349ba10[style=dotted];
	Node0x3492b50 [shape=record,label="{  %7 = load i8** @key, align 8}"];
	Node0x3492b50 -> Node0x3493780[style=dotted,label = "{DEF_USE}" ];
	Node0x3492b50 -> Node0x349b720[style=dotted];
	Node0x3492bf0 [shape=record,label="{  %9 = load i32* @i, align 4}"];
	Node0x3492bf0 -> Node0x34932c0[style=dotted,label = "{DEF_USE}" ];
	Node0x3492bf0 -> Node0x349ba10[style=dotted];
	Node0x3492c60 [shape=record,label="{GLOBAL_VALUE:@ciphertext = common global i8* null, align 8}"];
	Node0x3492c60 -> Node0x3492cd0[style=dotted];
	Node0x3492cd0 [shape=record,label="{  %10 = load i8** @ciphertext, align 8}"];
	Node0x3492cd0 -> Node0x34936b0[style=dotted,label = "{DEF_USE}" ];
	Node0x3492cd0 -> Node0x349b720[style=dotted];
	Node0x3492d40 [shape=record,label="{  %11 = load i32* @i, align 4}"];
	Node0x3492d40 -> Node0x348b0e0[style=dotted,label = "{DEF_USE}" ];
	Node0x3492d40 -> Node0x349ba10[style=dotted];
	Node0x3492db0 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x3492db0 -> Node0x3492e20[style=dotted,label = "{DEF_USE}" ];
	Node0x3492db0 -> Node0x3492e90[style=dotted,label = "{DEF_USE}" ];
	Node0x3492db0 -> Node0x3492f30[style=dotted,label = "{DEF_USE}" ];
	Node0x3492e20 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x3492e20 -> Node0x3492e90[style=dotted,label = "{RAW} sz.addr"];
	Node0x3492e20 -> Node0x3492f30[style=dotted,label = "{RAW} sz.addr"];
	Node0x3492e90 [shape=record,label="{  %0 = load i32* %sz.addr, align 4}"];
	Node0x3492e90 -> Node0x3492fa0[style=dotted,label = "{DEF_USE}" ];
	Node0x3492e90 -> Node0x349ba10[style=dotted];
	Node0x3492f30 [shape=record,label="{  %2 = load i32* %sz.addr, align 4}"];
	Node0x3492f30 -> Node0x3493290[style=dotted,label = "{DEF_USE}" ];
	Node0x3492f30 -> Node0x349ba10[style=dotted];
	Node0x3492fa0 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x3492fa0 -> Node0x3493010[style=dotted,label = "{DEF_USE}" ];
	Node0x3493010 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #3}"];
	Node0x3493080 [shape=record,label="{  store i8* %call, i8** @ciphertext, align 8}"];
	Node0x3493080 -> Node0x34930f0[style=dotted,label = "{RAW} arrayidx"];
	Node0x3493080 -> Node0x3493160[style=dotted,label = "{RAW} arrayidx4"];
	Node0x3493080 -> Node0x3492cd0[style=dotted,label = "{RAW} ciphertext"];
	Node0x34930f0 [shape=record,label="{  %5 = load i8* %arrayidx, align 1}"];
	Node0x34930f0 -> Node0x34934c0[style=dotted,label = "{DEF_USE}" ];
	Node0x3493160 [shape=record,label="{  %8 = load i8* %arrayidx4, align 1}"];
	Node0x3493160 -> Node0x34937f0[style=dotted,label = "{DEF_USE}" ];
	Node0x34931d0 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x34931d0 -> Node0x34928d0[style=dotted,label = "{RAW} i"];
	Node0x34931d0 -> Node0x3492940[style=dotted,label = "{RAW} i"];
	Node0x34931d0 -> Node0x34930f0[style=dotted,label = "{RAW} arrayidx"];
	Node0x34931d0 -> Node0x3492ae0[style=dotted,label = "{RAW} i"];
	Node0x34931d0 -> Node0x3493160[style=dotted,label = "{RAW} arrayidx4"];
	Node0x34931d0 -> Node0x3492bf0[style=dotted,label = "{RAW} i"];
	Node0x34931d0 -> Node0x3492d40[style=dotted,label = "{RAW} i"];
	Node0x3493290 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x3493290 -> Node0x34933e0[style=dotted,label = "{DEF_USE}" ];
	Node0x34933e0 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x34933e0 -> Node0x34928d0;
	Node0x34933e0 -> Node0x3492f30;
	Node0x34933e0 -> Node0x3493290;
	Node0x34933e0 -> Node0x34933e0;
	Node0x34933e0 -> Node0x3492940;
	Node0x34933e0 -> Node0x3493490;
	Node0x34933e0 -> Node0x3492a40;
	Node0x34933e0 -> Node0x3493590;
	Node0x34933e0 -> Node0x34930f0;
	Node0x34933e0 -> Node0x34934c0;
	Node0x34933e0 -> Node0x3492ae0;
	Node0x34933e0 -> Node0x3493710;
	Node0x34933e0 -> Node0x3492b50;
	Node0x34933e0 -> Node0x3493780;
	Node0x34933e0 -> Node0x3493160;
	Node0x34933e0 -> Node0x34937f0;
	Node0x34933e0 -> Node0x3493860;
	Node0x34933e0 -> Node0x3493600;
	Node0x34933e0 -> Node0x3492bf0;
	Node0x34933e0 -> Node0x34932c0;
	Node0x34933e0 -> Node0x3492cd0;
	Node0x34933e0 -> Node0x34936b0;
	Node0x34933e0 -> Node0x34936e0;
	Node0x34933e0 -> Node0x348b070;
	Node0x34933e0 -> Node0x3492d40;
	Node0x34933e0 -> Node0x348b0e0;
	Node0x34933e0 -> Node0x348b150;
	Node0x34933e0 -> Node0x348b1c0;
	Node0x3493490 [shape=record,label="{  %idxprom = zext i32 %3 to i64}"];
	Node0x3493490 -> Node0x3493590[style=dotted,label = "{DEF_USE}" ];
	Node0x3493590 [shape=record,label="{  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom}"];
	Node0x3493590 -> Node0x34930f0[style=dotted,label = "{DEF_USE}" ];
	Node0x34934c0 [shape=record,label="{  %conv2 = sext i8 %5 to i32}"];
	Node0x34934c0 -> Node0x3493860[style=dotted,label = "{DEF_USE}" ];
	Node0x3493710 [shape=record,label="{  %idxprom3 = zext i32 %6 to i64}"];
	Node0x3493710 -> Node0x3493780[style=dotted,label = "{DEF_USE}" ];
	Node0x3493780 [shape=record,label="{  %arrayidx4 = getelementptr inbounds i8* %7, i64 %idxprom3}"];
	Node0x3493780 -> Node0x3493160[style=dotted,label = "{DEF_USE}" ];
	Node0x34937f0 [shape=record,label="{  %conv5 = sext i8 %8 to i32}"];
	Node0x34937f0 -> Node0x3493860[style=dotted,label = "{DEF_USE}" ];
	Node0x3493860 [shape=record,label="{  %xor = xor i32 %conv2, %conv5}"];
	Node0x3493860 -> Node0x3493600[style=dotted,label = "{DEF_USE}" ];
	Node0x3493600 [shape=record,label="{  %conv6 = trunc i32 %xor to i8}"];
	Node0x3493600 -> Node0x34936e0[style=dotted,label = "{DEF_USE}" ];
	Node0x34932c0 [shape=record,label="{  %idxprom7 = zext i32 %9 to i64}"];
	Node0x34932c0 -> Node0x34936b0[style=dotted,label = "{DEF_USE}" ];
	Node0x34936b0 [shape=record,label="{  %arrayidx8 = getelementptr inbounds i8* %10, i64 %idxprom7}"];
	Node0x34936b0 -> Node0x34936e0[style=dotted,label = "{DEF_USE}" ];
	Node0x34936e0 [shape=record,label="{  store i8 %conv6, i8* %arrayidx8, align 1}"];
	Node0x34936e0 -> Node0x34928d0[style=dotted,label = "{RAW} i"];
	Node0x34936e0 -> Node0x3492940[style=dotted,label = "{RAW} i"];
	Node0x34936e0 -> Node0x3492ae0[style=dotted,label = "{RAW} i"];
	Node0x34936e0 -> Node0x3492b50[style=dotted,label = "{RAW} key"];
	Node0x34936e0 -> Node0x3492bf0[style=dotted,label = "{RAW} i"];
	Node0x34936e0 -> Node0x3492cd0[style=dotted,label = "{RAW} ciphertext"];
	Node0x34936e0 -> Node0x3492d40[style=dotted,label = "{RAW} i"];
	Node0x348b070 [shape=record,label="{  br label %for.inc}"];
	Node0x348b0e0 [shape=record,label="{  %inc = add i32 %11, 1}"];
	Node0x348b0e0 -> Node0x348b150[style=dotted,label = "{DEF_USE}" ];
	Node0x348b150 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x348b150 -> Node0x34928d0[style=dotted,label = "{RAW} i"];
	Node0x348b150 -> Node0x3492940[style=dotted,label = "{RAW} i"];
	Node0x348b150 -> Node0x34930f0[style=dotted,label = "{RAW} arrayidx"];
	Node0x348b150 -> Node0x3492ae0[style=dotted,label = "{RAW} i"];
	Node0x348b150 -> Node0x3493160[style=dotted,label = "{RAW} arrayidx4"];
	Node0x348b150 -> Node0x3492bf0[style=dotted,label = "{RAW} i"];
	Node0x348b150 -> Node0x3492d40[style=dotted,label = "{RAW} i"];
	Node0x348b1c0 [shape=record,label="{  br label %for.cond}"];
	Node0x3494130 [shape=record,label="{\<\<ENTRY\>\> encrypt}"];
	Node0x3494130 -> Node0x34927f0;
	Node0x3494130 -> Node0x3492db0;
	Node0x3494130 -> Node0x3492860;
	Node0x3494130 -> Node0x3492e20;
	Node0x3494130 -> Node0x3492e90;
	Node0x3494130 -> Node0x3492fa0;
	Node0x3494130 -> Node0x3493010;
	Node0x3494130 -> Node0x3493080;
	Node0x3494130 -> Node0x34931d0;
	Node0x3494130 -> Node0x3494350;
	Node0x3494130 -> Node0x34928d0;
	Node0x3494130 -> Node0x3492f30;
	Node0x3494130 -> Node0x3493290;
	Node0x3494130 -> Node0x34933e0;
	Node0x3494130 -> Node0x34943c0;
	Node0x3494130 -> Node0x349b6b0[style=dashed];
	Node0x3494130 -> Node0x349b720[style=dashed];
	Node0x3494130 -> Node0x349b9a0[style=dashed];
	Node0x3494130 -> Node0x349ba10[style=dashed];
	Node0x3494350 [shape=record,label="{  br label %for.cond}"];
	Node0x34943c0 [shape=record,label="{  ret void}"];
	Node0x3498040 [shape=record,label="{  %username = alloca [20 x i8], align 16}"];
	Node0x3498040 -> Node0x34980b0[style=dotted,label = "{DEF_USE}" ];
	Node0x3498040 -> Node0x3498120[style=dotted,label = "{DEF_USE}" ];
	Node0x3498040 -> Node0x34981c0[style=dotted,label = "{DEF_USE}" ];
	Node0x34980b0 [shape=record,label="{  %arraydecay = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x34980b0 -> Node0x3498480[style=dotted,label = "{DEF_USE}" ];
	Node0x3498120 [shape=record,label="{  %arraydecay2 = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x3498120 -> Node0x34984f0[style=dotted,label = "{DEF_USE}" ];
	Node0x34981c0 [shape=record,label="{  %arraydecay6 = getelementptr inbounds [20 x i8]* %username, i32 0, i32 0}"];
	Node0x34981c0 -> Node0x34990c0[style=dotted,label = "{DEF_USE}" ];
	Node0x3498190 [shape=record,label="{  %text = alloca [1024 x i8], align 16}"];
	Node0x3498190 -> Node0x3498270[style=dotted,label = "{DEF_USE}" ];
	Node0x3498190 -> Node0x34982e0[style=dotted,label = "{DEF_USE}" ];
	Node0x3498190 -> Node0x3498380[style=dotted,label = "{DEF_USE}" ];
	Node0x3498190 -> Node0x3498350[style=dotted,label = "{DEF_USE}" ];
	Node0x3498270 [shape=record,label="{  %arraydecay4 = getelementptr inbounds [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x3498270 -> Node0x3498f70[style=dotted,label = "{DEF_USE}" ];
	Node0x34982e0 [shape=record,label="{  %arraydecay7 = getelementptr inbounds [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x34982e0 -> Node0x3499150[style=dotted,label = "{DEF_USE}" ];
	Node0x3498380 [shape=record,label="{  %arraydecay9 = getelementptr inbounds [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x3498380 -> Node0x349aac0[style=dotted,label = "{DEF_USE}" ];
	Node0x3498350 [shape=record,label="{  %arraydecay10 = getelementptr inbounds [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x3498350 -> Node0x349ab30[style=dotted,label = "{DEF_USE}" ];
	Node0x3498480 [shape=record,label="{  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0), i8* %arraydecay)}"];
	Node0x34984f0 [shape=record,label="{  call void @greeter(i8* %arraydecay2)}"];
	Node0x34984f0 -> Node0x34850b0;
	Node0x34984f0 -> Node0x3498f00[style=dashed];
	Node0x34984f0 -> Node0x3498fa0[style=dashed];
	Node0x3498ae0 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x3498ae0 -> Node0x3498b50[style=dashed];
	Node0x3498ae0 -> Node0x3484f00[style=dotted];
	Node0x3498b50 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x3498b50 -> Node0x3498fa0[style=dashed];
	Node0x3498f00 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x3498f00 -> Node0x3498ae0[style=dashed];
	Node0x3498fa0 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x3498f70 [shape=record,label="{  %call5 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8]* @.str4, i32 0, i32 0), i8* %arraydecay4)}"];
	Node0x34990c0 [shape=record,label="{  call void @initkey(i8* %arraydecay6, i32 %conv)}"];
	Node0x34990c0 -> Node0x348acd0;
	Node0x34990c0 -> Node0x349a7d0[style=dashed];
	Node0x34990c0 -> Node0x349a870[style=dashed];
	Node0x34990c0 -> Node0x349a840[style=dashed];
	Node0x34990c0 -> Node0x349a970[style=dashed];
	Node0x3499150 [shape=record,label="{  %call8 = call i64 @strlen(i8* %arraydecay7)}"];
	Node0x34991e0 [shape=record,label="{  %conv = trunc i64 %call8 to i32}"];
	Node0x34991e0 -> Node0x34990c0[style=dotted,label = "{DEF_USE}" ];
	Node0x3499db0 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x3499db0 -> Node0x3499e20[style=dashed];
	Node0x3499db0 -> Node0x3489eb0[style=dotted];
	Node0x3499db0 -> Node0x348a5a0[style=dotted];
	Node0x3499e20 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x3499e20 -> Node0x349a870[style=dashed];
	Node0x348af80 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x348af80 -> Node0x349a0a0[style=dashed];
	Node0x348af80 -> Node0x348a2c0[style=dotted];
	Node0x348af80 -> Node0x348a610[style=dotted];
	Node0x348af80 -> Node0x348ab90[style=dotted];
	Node0x349a0a0 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x349a0a0 -> Node0x349a970[style=dashed];
	Node0x349a7d0 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x349a7d0 -> Node0x3499db0[style=dashed];
	Node0x349a870 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x349a840 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x349a840 -> Node0x348af80[style=dashed];
	Node0x349a970 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x349aac0 [shape=record,label="{  call void @encrypt(i8* %arraydecay9, i32 %conv12)}"];
	Node0x349aac0 -> Node0x3494130;
	Node0x349aac0 -> Node0x349c1a0[style=dashed];
	Node0x349aac0 -> Node0x349c240[style=dashed];
	Node0x349aac0 -> Node0x349c210[style=dashed];
	Node0x349aac0 -> Node0x349c340[style=dashed];
	Node0x349ab30 [shape=record,label="{  %call11 = call i64 @strlen(i8* %arraydecay10)}"];
	Node0x349aba0 [shape=record,label="{  %conv12 = trunc i64 %call11 to i32}"];
	Node0x349aba0 -> Node0x349aac0[style=dotted,label = "{DEF_USE}" ];
	Node0x349b6b0 [shape=record,label="{FORMAL_IN:i8*}"];
	Node0x349b6b0 -> Node0x349b720[style=dashed];
	Node0x349b6b0 -> Node0x3492860[style=dotted];
	Node0x349b6b0 -> Node0x3493080[style=dotted];
	Node0x349b720 [shape=record,label="{FORMAL_OUT:i8*}"];
	Node0x349b720 -> Node0x349c240[style=dashed];
	Node0x349b9a0 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x349b9a0 -> Node0x349ba10[style=dashed];
	Node0x349b9a0 -> Node0x3492e20[style=dotted];
	Node0x349b9a0 -> Node0x34931d0[style=dotted];
	Node0x349b9a0 -> Node0x348b150[style=dotted];
	Node0x349ba10 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x349ba10 -> Node0x349c340[style=dashed];
	Node0x349c1a0 [shape=record,label="{ACTUAL_IN:i8*}"];
	Node0x349c1a0 -> Node0x349b6b0[style=dashed];
	Node0x349c240 [shape=record,label="{ACTUAL_OUT:i8*}"];
	Node0x349c210 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x349c210 -> Node0x349b9a0[style=dashed];
	Node0x349c340 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x349c440 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x349c440 -> Node0x3498040;
	Node0x349c440 -> Node0x3498190;
	Node0x349c440 -> Node0x349c4e0;
	Node0x349c440 -> Node0x34980b0;
	Node0x349c440 -> Node0x3498480;
	Node0x349c440 -> Node0x3498120;
	Node0x349c440 -> Node0x34984f0;
	Node0x349c440 -> Node0x349c4b0;
	Node0x349c440 -> Node0x3498270;
	Node0x349c440 -> Node0x3498f70;
	Node0x349c440 -> Node0x34981c0;
	Node0x349c440 -> Node0x34982e0;
	Node0x349c440 -> Node0x3499150;
	Node0x349c440 -> Node0x34991e0;
	Node0x349c440 -> Node0x34990c0;
	Node0x349c440 -> Node0x3498380;
	Node0x349c440 -> Node0x3498350;
	Node0x349c440 -> Node0x349ab30;
	Node0x349c440 -> Node0x349aba0;
	Node0x349c440 -> Node0x349aac0;
	Node0x349c440 -> Node0x349c550;
	Node0x349c4e0 [shape=record,label="{  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str1, i32 0, i32 0))}"];
	Node0x349c4b0 [shape=record,label="{  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str3, i32 0, i32 0))}"];
	Node0x349c550 [shape=record,label="{  ret void}"];
}
