digraph "Program Dependency Graph for 'cm_to_inches' function" {
	label="Program Dependency Graph for 'cm_to_inches' function";

	Node0x36d1d40 [shape=record,label="{  %cm.addr = alloca double, align 8}"];
	Node0x36d1d40 -> Node0x36d1db0[style=dotted,label = "{DEF_USE}" ];
	Node0x36d1d40 -> Node0x36d1e20[style=dotted,label = "{DEF_USE}" ];
	Node0x36d1db0 [shape=record,label="{  store double %cm, double* %cm.addr, align 8}"];
	Node0x36d1db0 -> Node0x36d1e20[style=dotted,label = "{RAW} cm.addr"];
	Node0x36d1e20 [shape=record,label="{  %0 = load double* %cm.addr, align 8}"];
	Node0x36d1e20 -> Node0x36d1ef0[style=dotted,label = "{DEF_USE}" ];
	Node0x36d1ef0 [shape=record,label="{  %div = fdiv double %0, 2.540000e+00}"];
	Node0x36d1ef0 -> Node0x36d1f60[style=dotted,label = "{DEF_USE}" ];
	Node0x36d1f60 [shape=record,label="{  ret double %div}"];
	Node0x36d1e90 [shape=record,label="{\<\<ENTRY\>\> cm_to_inches}"];
	Node0x36d1e90 -> Node0x36d1d40;
	Node0x36d1e90 -> Node0x36d1db0;
	Node0x36d1e90 -> Node0x36d1e20;
	Node0x36d1e90 -> Node0x36d1ef0;
	Node0x36d1e90 -> Node0x36d1f60;
	Node0x36d4820 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x36d4820 -> Node0x36d4890[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4890 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x36d4900 [shape=record,label="{  %func1 = alloca double (double)*, align 8}"];
	Node0x36d4900 -> Node0x36d4a00[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4900 -> Node0x36d4a70[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4a00 [shape=record,label="{  store double (double)* @cm_to_inches, double (double)** %func1, align 8}"];
	Node0x36d4a00 -> Node0x36d4a70[style=dotted,label = "{RAW} func1"];
	Node0x36d4a70 [shape=record,label="{  %0 = load double (double)** %func1, align 8}"];
	Node0x36d4a70 -> Node0x36d4c90[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4b10 [shape=record,label="{  %func2 = alloca i8* (i8*, i32)*, align 8}"];
	Node0x36d4b10 -> Node0x36d4b80[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4b10 -> Node0x36d4bf0[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4b80 [shape=record,label="{  store i8* (i8*, i32)* @strchr, i8* (i8*, i32)** %func2, align 8}"];
	Node0x36d4b80 -> Node0x36d4bf0[style=dotted,label = "{RAW} func2"];
	Node0x36d4bf0 [shape=record,label="{  %1 = load i8* (i8*, i32)** %func2, align 8}"];
	Node0x36d4bf0 -> Node0x36d1b90[style=dotted,label = "{DEF_USE}" ];
	Node0x36d4c90 [shape=record,label="{  %call = call double %0(double 1.500000e+01)}"];
	Node0x36d1b90 [shape=record,label="{  %call1 = call i8* %1(i8* getelementptr inbounds ([10 x i8]* @.str1, i32 0, i32 0), i32 112)}"];
	Node0x36d17c0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x36d17c0 -> Node0x36d4820;
	Node0x36d17c0 -> Node0x36d4900;
	Node0x36d17c0 -> Node0x36d4b10;
	Node0x36d17c0 -> Node0x36d4890;
	Node0x36d17c0 -> Node0x36d4a00;
	Node0x36d17c0 -> Node0x36d4b80;
	Node0x36d17c0 -> Node0x36d4a70;
	Node0x36d17c0 -> Node0x36d4c90;
	Node0x36d17c0 -> Node0x36d4bf0;
	Node0x36d17c0 -> Node0x36d1b90;
	Node0x36d17c0 -> Node0x36d4970;
	Node0x36d17c0 -> Node0x36d4e50;
	Node0x36d4970 [shape=record,label="{  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0), double %call, i8* %call1)}"];
	Node0x36d4e50 [shape=record,label="{  ret i32 0}"];
}
