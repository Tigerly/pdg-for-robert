file parameter: test/thttpd/thttpd.bc
Pass Arguments:  -targetlibinfo -datalayout -notti -basictti -x86tti -no-aa -ata -dsa-local -alloc-identify -dsa-stdlib -dsa-bu -dsa-td -dsa-aa -dsnodeequivs -smack-ds-aa -pdg -dot-pdg -verify -verify-di
Target Library Information
Data Layout
No target information
Target independent code generator's TTI
X86 Target Transform Info
No Alias Analysis (always returns 'may' alias)
  ModulePass Manager
    Identify Address Taken Functions
    Local Data Structure Analysis
    Allocator Identification Analysis (find malloc/free wrappers)
      Unnamed pass: implement Pass::getPassName()
    Standard Library Local Data Structure Analysis
    Bottom-up Data Structure Analysis
    Top-down Data Structure Analysis
    Data Structure Analysis Alias Analysis
    Compute DSNode equivalence classes
    Smack - Data Structure Analysis Alias Analysis
    Program Dependency Graph
      Unnamed pass: implement Pass::getPassName()
    FunctionPass Manager
      Print instruction-level program dependency graph of function to 'dot' file
      Module Verifier
    Debug Info Verifier
    Bitcode Writer
Pass Arguments:  -domtree -loops
  FunctionPass Manager
    Dominator Tree Construction
    Natural Loop Information
Pass Arguments:  -postdomtree -cdg -fda -ddg
  FunctionPass Manager
    Post-Dominator Tree Construction
    Control Dependency Graph
    Flow  Dependence Analysis
    Data Dependency Graph
ProgramDependencyGraph::runOnModule
funcMap size = 258
======Global List: ======
PDG 3.875969e-01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:main
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 1562 Function: main
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @parse_args(i32 %7, i8** %8)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : parse_args
DEBUG 459 connectCallerAndCallee callInst:   call void @parse_args(i32 %7, i8** %8)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @lookup_hostname(%union.httpd_sockaddr* %sa4, i64 128, i32* %gotv4, %union.httpd_sockaddr* %sa6, i64 128, i32* %gotv6)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : lookup_hostname
DEBUG 459 connectCallerAndCallee callInst:   call void @lookup_hostname(%union.httpd_sockaddr* %sa4, i64 128, i32* %gotv4, %union.httpd_sockaddr* %sa6, i64 128, i32* %gotv6)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @read_throttlefile(i8* %14)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : read_throttlefile
DEBUG 459 connectCallerAndCallee callInst:   call void @read_throttlefile(i8* %14)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call103 = call i32 @fdwatch_get_nfiles()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_get_nfiles
DEBUG 459 connectCallerAndCallee callInst:   %call103 = call i32 @fdwatch_get_nfiles()
---------------------------------------------------
call_func = null:   %call161 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 15, void (i32)* @handle_term)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call162 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 2, void (i32)* @handle_term)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call163 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 17, void (i32)* @handle_chld)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call164 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*))
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call165 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 1, void (i32)* @handle_hup)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call166 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 10, void (i32)* @handle_usr1)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call167 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 12, void (i32)* @handle_usr2)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
call_func = null:   %call168 = call i32 (i32, void (i32)*, ...)* bitcast (i32 (...)* @sigset to i32 (i32, void (i32)*, ...)*)(i32 14, void (i32)* @handle_alrm)
indirect call, called Type t = i32 (i32, void (i32)*, ...)*
afte cast<FunctionType>, ft = i32 (i32, void (i32)*, ...)
DEBUG 456 New call for tree construction:   call void @tmr_init()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_init
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_init()
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call177 = call %struct.httpd_server* @httpd_initialize(i8* %69, %union.httpd_sockaddr* %cond, %union.httpd_sockaddr* %cond175, i16 zeroext %72, i8* %73, i32 %74, i8* %75, i8* %76, i32 %77, i8* %arraydecay176, i32 %78, %struct._IO_FILE* %79, i32 %80, i32 %81, i32 %82, i8* %83, i8* %84, i32 %85)
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_initialize
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
DEBUG 459 connectCallerAndCallee callInst:   %call177 = call %struct.httpd_server* @httpd_initialize(i8* %69, %union.httpd_sockaddr* %cond, %union.httpd_sockaddr* %cond175, i16 zeroext %72, i8* %73, i32 %74, i8* %75, i8* %76, i32 %77, i8* %arraydecay176, i32 %78, %struct._IO_FILE* %79, i32 %80, i32 %81, i32 %82, i8* %83, i8* %84, i32 %85)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call182 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @occasional, i8* %87, i64 120000, i32 1)
DEBUG 312: buildFormalTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildFormalTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_create
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call182 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @occasional, i8* %87, i64 120000, i32 1)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call187 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @idle, i8* %88, i64 5000, i32 1)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call195 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @update_throttles, i8* %90, i64 2000, i32 1)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call201 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @show_stats, i8* %91, i64 3600000, i32 1)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @fdwatch_add_fd(i32 %116, i8* null, i32 0)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_add_fd
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %116, i8* null, i32 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %120, i8* null, i32 0)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @re_open_logfile()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : re_open_logfile
DEBUG 459 connectCallerAndCallee callInst:   call void @re_open_logfile()
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call275 = call i64 @tmr_mstimeout(%struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_mstimeout
DEBUG 459 connectCallerAndCallee callInst:   %call275 = call i64 @tmr_mstimeout(%struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call276 = call i32 @fdwatch(i64 %call275)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch
DEBUG 459 connectCallerAndCallee callInst:   %call276 = call i32 @fdwatch(i64 %call275)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @tmr_run(%struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_run
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_run(%struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call303 = call i32 @fdwatch_check_fd(i32 %133)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_check_fd
DEBUG 459 connectCallerAndCallee callInst:   %call303 = call i32 @fdwatch_check_fd(i32 %133)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call307 = call i32 @handle_newconnect(%struct.timeval* %tv, i32 %135)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : handle_newconnect
DEBUG 459 connectCallerAndCallee callInst:   %call307 = call i32 @handle_newconnect(%struct.timeval* %tv, i32 %135)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call320 = call i32 @fdwatch_check_fd(i32 %140)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call324 = call i32 @handle_newconnect(%struct.timeval* %tv, i32 %142)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call330 = call i8* @fdwatch_get_next_client_data()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_get_next_client_data
DEBUG 459 connectCallerAndCallee callInst:   %call330 = call i8* @fdwatch_get_next_client_data()
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call339 = call i32 @fdwatch_check_fd(i32 %148)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @clear_connection(%struct.connecttab* %149, %struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : clear_connection
DEBUG 459 connectCallerAndCallee callInst:   call void @clear_connection(%struct.connecttab* %149, %struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @handle_read(%struct.connecttab* %152, %struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : handle_read
DEBUG 459 connectCallerAndCallee callInst:   call void @handle_read(%struct.connecttab* %152, %struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @handle_send(%struct.connecttab* %153, %struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : handle_send
DEBUG 459 connectCallerAndCallee callInst:   call void @handle_send(%struct.connecttab* %153, %struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @handle_linger(%struct.connecttab* %154, %struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : handle_linger
DEBUG 459 connectCallerAndCallee callInst:   call void @handle_linger(%struct.connecttab* %154, %struct.timeval* %tv)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_run(%struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @fdwatch_del_fd(i32 %161)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_del_fd
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %161)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %165)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_unlisten(%struct.httpd_server* %166)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_unlisten
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_unlisten(%struct.httpd_server* %166)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @shut_down()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : shut_down
DEBUG 459 connectCallerAndCallee callInst:   call void @shut_down()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 104
strrchr is defined outside!
openlog is defined outside!
tzset is defined outside!
syslog is defined outside!
fprintf is defined outside!
exit is defined outside!
getuid is defined outside!
getpwnam is defined outside!
strcmp is defined outside!
fopen is defined outside!
perror is defined outside!
fcntl is defined outside!
fileno is defined outside!
fchown is defined outside!
chdir is defined outside!
getcwd is defined outside!
strlen is defined outside!
strcat is defined outside!
fclose is defined outside!
daemon is defined outside!
setsid is defined outside!
getpid is defined outside!
chroot is defined outside!
strncmp is defined outside!
llvm.memmove.p0i8.p0i8.i64 is defined outside!
strcpy is defined outside!
sigset is defined outside!
alarm is defined outside!
time is defined outside!
setgroups is defined outside!
setgid is defined outside!
initgroups is defined outside!
setuid is defined outside!
malloc is defined outside!
gettimeofday is defined outside!
__errno_location is defined outside!
closelog is defined outside!
shutdown is defined outside!
read is defined outside!
write is defined outside!
writev is defined outside!
free is defined outside!
fgets is defined outside!
strchr is defined outside!
__isoc99_sscanf is defined outside!
strstr is defined outside!
realloc is defined outside!
strdup is defined outside!
llvm.memset.p0i8.i64 is defined outside!
snprintf is defined outside!
getaddrinfo is defined outside!
gai_strerror is defined outside!
freeaddrinfo is defined outside!
printf is defined outside!
atoi is defined outside!
strspn is defined outside!
strcspn is defined outside!
strcasecmp is defined outside!
abort is defined outside!
waitpid is defined outside!
PDG 7.751938e-01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:parse_args
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:parse_args
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5829 Function: parse_args
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @read_config(i8* %19)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : read_config
DEBUG 459 connectCallerAndCallee callInst:   call void @read_config(i8* %19)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @usage()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : usage
DEBUG 459 connectCallerAndCallee callInst:   call void @usage()
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @usage()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 160
PDG 1.162791e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:lookup_hostname
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:lookup_hostname
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 5998 Function: lookup_hostname
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 197
PDG 1.550388e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_throttlefile
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_throttlefile
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6227 Function: read_throttlefile
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call102 = call i8* @e_strdup(i8* %arraydecay101)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : e_strdup
DEBUG 459 connectCallerAndCallee callInst:   %call102 = call i8* @e_strdup(i8* %arraydecay101)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 223
PDG 1.937984e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_term
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_term
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6241 Function: handle_term
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @shut_down()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 224
PDG 2.325581e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_chld
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_chld
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6299 Function: handle_chld
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 235
PDG 2.713178e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_hup
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_hup
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6311 Function: handle_hup
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 239
PDG 3.100775e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_usr1
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_usr1
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6324 Function: handle_usr1
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @shut_down()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 240
PDG 3.488372e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_usr2
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_usr2
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6336 Function: handle_usr2
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @logstats(%struct.timeval* null)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @logstats(%struct.timeval* null)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 244
PDG 3.875969e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_alrm
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_alrm
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6367 Function: handle_alrm
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 248
PDG 4.263566e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:occasional
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:occasional
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6378 Function: occasional
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @mmc_cleanup(%struct.timeval* %0)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : mmc_cleanup
DEBUG 459 connectCallerAndCallee callInst:   call void @mmc_cleanup(%struct.timeval* %0)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @tmr_cleanup()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_cleanup
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_cleanup()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 252
PDG 4.651163e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:idle
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:idle
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 6465 Function: idle
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_ntoa
DEBUG 459 connectCallerAndCallee callInst:   %call = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_send_err(%struct.httpd_conn* %13, i32 408, i8* %14, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_send_err
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %13, i32 408, i8* %14, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @finish_connection(%struct.connecttab* %16, %struct.timeval* %17)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : finish_connection
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %16, %struct.timeval* %17)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call11 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr10)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @clear_connection(%struct.connecttab* %24, %struct.timeval* %25)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 269
PDG 5.038760e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:update_throttles
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:update_throttles
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 8391 Function: update_throttles
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 315
PDG 5.426357e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:show_stats
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:show_stats
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 8400 Function: show_stats
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @logstats(%struct.timeval* %0)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 319
PDG 5.813953e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:re_open_logfile
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:re_open_logfile
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 8440 Function: re_open_logfile
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @httpd_set_logfp(%struct.httpd_server* %8, %struct._IO_FILE* %9)
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_set_logfp
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_set_logfp(%struct.httpd_server* %8, %struct._IO_FILE* %9)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 321
PDG 6.201550e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_newconnect
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_newconnect
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 8667 Function: handle_newconnect
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_run(%struct.timeval* %2)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call17 = call i32 @httpd_get_conn(%struct.httpd_server* %18, i32 %19, %struct.httpd_conn* %21)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_get_conn
DEBUG 459 connectCallerAndCallee callInst:   %call17 = call i32 @httpd_get_conn(%struct.httpd_server* %18, i32 %19, %struct.httpd_conn* %21)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_run(%struct.timeval* %22)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_set_ndelay(i32 %39)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_set_ndelay
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_set_ndelay(i32 %39)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %42, i8* %44, i32 0)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 351
PDG 6.589147e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:clear_connection
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:clear_connection
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 9214 Function: clear_connection
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @tmr_cancel(%struct.TimerStruct* %3)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_cancel
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_cancel(%struct.TimerStruct* %3)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_cancel(%struct.TimerStruct* %8)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %19)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %26, i8* %28, i32 0)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call24 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %33, void (i8*, %struct.timeval*)* @linger_clear_connection, i8* %34, i64 500, i32 0)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @really_clear_connection(%struct.connecttab* %38, %struct.timeval* %39)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : really_clear_connection
DEBUG 459 connectCallerAndCallee callInst:   call void @really_clear_connection(%struct.connecttab* %38, %struct.timeval* %39)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 380
PDG 6.976744e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_read
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_read
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 10706 Function: handle_read
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %8, i32 400, i8* %9, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %10, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %11, %struct.timeval* %12)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_realloc_str(i8** %read_buf, i64* %read_size5, i64 %add)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_realloc_str
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %read_buf, i64* %read_size5, i64 %add)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %28, i32 400, i8* %29, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %30, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %31, %struct.timeval* %32)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %37, i32 400, i8* %38, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %39, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %40, %struct.timeval* %41)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call35 = call i32 @httpd_got_request(%struct.httpd_conn* %48)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_got_request
DEBUG 459 connectCallerAndCallee callInst:   %call35 = call i32 @httpd_got_request(%struct.httpd_conn* %48)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %49, i32 400, i8* %50, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %52, %struct.timeval* %53)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call37 = call i32 @httpd_parse_request(%struct.httpd_conn* %54)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_parse_request
DEBUG 459 connectCallerAndCallee callInst:   %call37 = call i32 @httpd_parse_request(%struct.httpd_conn* %54)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %55, %struct.timeval* %56)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call42 = call i32 @check_throttles(%struct.connecttab* %57)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : check_throttles
DEBUG 459 connectCallerAndCallee callInst:   %call42 = call i32 @check_throttles(%struct.connecttab* %57)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %58, i32 503, i8* %59, i8* getelementptr inbounds ([1 x i8]* @.str42, i32 0, i32 0), i8* %60, i8* %62)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %63, %struct.timeval* %64)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call45 = call i32 @httpd_start_request(%struct.httpd_conn* %65, %struct.timeval* %66)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_start_request
DEBUG 459 connectCallerAndCallee callInst:   %call45 = call i32 @httpd_start_request(%struct.httpd_conn* %65, %struct.timeval* %66)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %67, %struct.timeval* %68)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %99, %struct.timeval* %100)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %105, %struct.timeval* %106)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %115)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %117, i8* %119, i32 1)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 435
PDG 7.364341e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_send
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_send
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 17718 Function: handle_send
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %54)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call63 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %59, void (i8*, %struct.timeval*)* @wakeup_connection, i8* %62, i64 %61, i32 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @clear_connection(%struct.connecttab* %72, %struct.timeval* %73)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @finish_connection(%struct.connecttab* %118, %struct.timeval* %119)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %139)
---------------------------------------------------
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 312: buildActualTree: function pointer arg = void (i8*, %struct.timeval*)*
DEBUG 459 connectCallerAndCallee callInst:   %call181 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %150, void (i8*, %struct.timeval*)* @wakeup_connection, i8* %153, i64 %cond179, i32 0)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 529
PDG 7.751938e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_linger
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:handle_linger
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 18638 Function: handle_linger
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @really_clear_connection(%struct.connecttab* %7, %struct.timeval* %8)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 538
PDG 8.139535e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:shut_down
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:shut_down
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 19172 Function: shut_down
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @logstats(%struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_close_conn(%struct.httpd_conn* %7, %struct.timeval* %tv)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_close_conn
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_close_conn(%struct.httpd_conn* %7, %struct.timeval* %tv)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_destroy_conn(%struct.httpd_conn* %13)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_destroy_conn
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_destroy_conn(%struct.httpd_conn* %13)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %27)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %31)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_terminate(%struct.httpd_server* %32)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_terminate
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_terminate(%struct.httpd_server* %32)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @mmc_term()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : mmc_term
DEBUG 459 connectCallerAndCallee callInst:   call void @mmc_term()
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @tmr_term()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_term
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_term()
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 552
PDG 8.527132e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_config
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:read_config
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 20338 Function: read_config
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @no_value_required(i8* %26, i8* %27)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : no_value_required
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %26, i8* %27)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @value_required(i8* %29, i8* %30)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : value_required
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %29, i8* %30)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %33, i8* %34)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call52 = call i8* @e_strdup(i8* %35)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %37, i8* %38)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %40, i8* %41)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %43, i8* %44)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call68 = call i8* @e_strdup(i8* %45)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %47, i8* %48)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %50, i8* %51)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %53, i8* %54)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call84 = call i8* @e_strdup(i8* %55)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %57, i8* %58)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call90 = call i8* @e_strdup(i8* %59)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %61, i8* %62)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %65, i8* %66)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call102 = call i8* @e_strdup(i8* %67)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %70, i8* %71)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %73, i8* %74)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call117 = call i8* @e_strdup(i8* %75)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %77, i8* %78)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call123 = call i8* @e_strdup(i8* %79)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %81, i8* %82)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call129 = call i8* @e_strdup(i8* %83)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %85, i8* %86)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call135 = call i8* @e_strdup(i8* %87)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %89, i8* %90)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %92, i8* %93)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %95, i8* %96)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @no_value_required(i8* %98, i8* %99)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %101, i8* %102)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call161 = call i8* @e_strdup(i8* %103)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %105, i8* %106)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call167 = call i8* @e_strdup(i8* %107)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %109, i8* %110)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call173 = call i8* @e_strdup(i8* %111)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @value_required(i8* %113, i8* %114)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 590
PDG 8.914729e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:usage
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:usage
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 20477 Function: usage
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 590
PDG 9.302326e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:e_strdup
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:e_strdup
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 20495 Function: e_strdup
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 594
PDG 9.689922e+00% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:logstats
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:logstats
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 20541 Function: logstats
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @thttpd_logstats(i64 %11)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : thttpd_logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @thttpd_logstats(i64 %11)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @httpd_logstats(i64 %12)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_logstats(i64 %12)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @mmc_logstats(i64 %13)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : mmc_logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @mmc_logstats(i64 %13)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @fdwatch_logstats(i64 %14)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : fdwatch_logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_logstats(i64 %14)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @tmr_logstats(i64 %15)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tmr_logstats
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_logstats(i64 %15)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 601
PDG 1.007752e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:finish_connection
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:finish_connection
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 20574 Function: finish_connection
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @httpd_write_response(%struct.httpd_conn* %1)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_write_response
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_write_response(%struct.httpd_conn* %1)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @clear_connection(%struct.connecttab* %2, %struct.timeval* %3)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 606
PDG 1.046512e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:linger_clear_connection
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:linger_clear_connection
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 21350 Function: linger_clear_connection
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @really_clear_connection(%struct.connecttab* %3, %struct.timeval* %4)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 614
PDG 1.085271e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:really_clear_connection
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:really_clear_connection
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 21841 Function: really_clear_connection
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_del_fd(i32 %8)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_close_conn(%struct.httpd_conn* %10, %struct.timeval* %11)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @clear_throttles(%struct.connecttab* %12, %struct.timeval* %13)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : clear_throttles
DEBUG 459 connectCallerAndCallee callInst:   call void @clear_throttles(%struct.connecttab* %12, %struct.timeval* %13)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @tmr_cancel(%struct.TimerStruct* %17)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 629
PDG 1.124031e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:check_throttles
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:check_throttles
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23177 Function: check_throttles
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call = call i32 @match(i8* %10, i8* %13)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : match
DEBUG 459 connectCallerAndCallee callInst:   %call = call i32 @match(i8* %10, i8* %13)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 663
PDG 1.162791e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:wakeup_connection
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:wakeup_connection
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23217 Function: wakeup_connection
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @fdwatch_add_fd(i32 %8, i8* %10, i32 1)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 675
PDG 1.201550e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:no_value_required
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:no_value_required
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23238 Function: no_value_required
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 679
PDG 1.240310e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:value_required
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:value_required
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23253 Function: value_required
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 683
PDG 1.279070e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:thttpd_logstats
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:thttpd_logstats
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23281 Function: thttpd_logstats
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 684
PDG 1.317829e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:clear_throttles
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:clear_throttles
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23314 Function: clear_throttles
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 692
PDG 1.356589e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_initialize
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_initialize
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23642 Function: httpd_initialize
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @check_options()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : check_options
DEBUG 459 connectCallerAndCallee callInst:   call void @check_options()
---------------------------------------------------
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
OS.str() = %struct._IO_FILE* FILE* appears, stop buildTypeTree
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_set_logfp(%struct.httpd_server* %60, %struct._IO_FILE* %61)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call100 = call i32 @initialize_listen_socket(%union.httpd_sockaddr* %72)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : initialize_listen_socket
DEBUG 459 connectCallerAndCallee callInst:   %call100 = call i32 @initialize_listen_socket(%union.httpd_sockaddr* %72)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call107 = call i32 @initialize_listen_socket(%union.httpd_sockaddr* %76)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @free_httpd_server(%struct.httpd_server* %82)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : free_httpd_server
DEBUG 459 connectCallerAndCallee callInst:   call void @free_httpd_server(%struct.httpd_server* %82)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @init_mime()
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : init_mime
DEBUG 459 connectCallerAndCallee callInst:   call void @init_mime()
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call128 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %cond)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 780
gethostname is defined outside!
PDG 1.395349e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_set_logfp
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_set_logfp
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23806 Function: httpd_set_logfp
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 788
PDG 1.434109e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_ntoa
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_ntoa
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23863 Function: httpd_ntoa
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call = call i64 @sockaddr_len(%union.httpd_sockaddr* %1)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : sockaddr_len
DEBUG 459 connectCallerAndCallee callInst:   %call = call i64 @sockaddr_len(%union.httpd_sockaddr* %1)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 798
PDG 1.472868e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_terminate
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_terminate
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 23889 Function: httpd_terminate
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_unlisten(%struct.httpd_server* %0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @free_httpd_server(%struct.httpd_server* %5)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 802
PDG 1.511628e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_unlisten
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_unlisten
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24003 Function: httpd_unlisten
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 810
close is defined outside!
PDG 1.550388e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_write_response
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_write_response
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24034 Function: httpd_write_response
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   call void @httpd_clear_ndelay(i32 %2)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_clear_ndelay
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_clear_ndelay(i32 %2)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call = call i32 @httpd_write_fully(i32 %6, i8* %8, i64 %10)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_write_fully
DEBUG 459 connectCallerAndCallee callInst:   %call = call i32 @httpd_write_fully(i32 %6, i8* %8, i64 %10)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 819
PDG 1.589147e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_clear_ndelay
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_clear_ndelay
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24074 Function: httpd_clear_ndelay
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 822
PDG 1.627907e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_write_fully
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_write_fully
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24136 Function: httpd_write_fully
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 831
PDG 1.666667e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_set_ndelay
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_set_ndelay
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24160 Function: httpd_set_ndelay
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 834
PDG 1.705426e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_realloc_str
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_realloc_str
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24254 Function: httpd_realloc_str
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 859
PDG 1.744186e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_send_err
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_send_err
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 24320 Function: httpd_send_err
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call = call i32 (i8*, i64, i8*, ...)* @my_snprintf(i8* %arraydecay, i64 1000, i8* getelementptr inbounds ([17 x i8]* @.str17161, i32 0, i32 0), i8* %7, i8* getelementptr inbounds ([7 x i8]* @.str18162, i32 0, i32 0), i32 %8)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : my_snprintf
DEBUG 459 connectCallerAndCallee callInst:   %call = call i32 (i8*, i64, i8*, ...)* @my_snprintf(i8* %arraydecay, i64 1000, i8* getelementptr inbounds ([17 x i8]* @.str17161, i32 0, i32 0), i8* %7, i8* getelementptr inbounds ([7 x i8]* @.str18162, i32 0, i32 0), i32 %8)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call4 = call i32 @send_err_file(%struct.httpd_conn* %9, i32 %10, i8* %11, i8* %12, i8* %arraydecay3)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : send_err_file
DEBUG 459 connectCallerAndCallee callInst:   %call4 = call i32 @send_err_file(%struct.httpd_conn* %9, i32 %10, i8* %11, i8* %12, i8* %arraydecay3)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call9 = call i32 (i8*, i64, i8*, ...)* @my_snprintf(i8* %arraydecay8, i64 1000, i8* getelementptr inbounds ([14 x i8]* @.str19163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18162, i32 0, i32 0), i32 %13)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call11 = call i32 @send_err_file(%struct.httpd_conn* %14, i32 %15, i8* %16, i8* %17, i8* %arraydecay10)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @send_response(%struct.httpd_conn* %18, i32 %19, i8* %20, i8* %21, i8* %22, i8* %23)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : send_response
DEBUG 459 connectCallerAndCallee callInst:   call void @send_response(%struct.httpd_conn* %18, i32 %19, i8* %20, i8* %21, i8* %22, i8* %23)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 875
PDG 1.782946e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_method_str
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_method_str
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 25228 Function: httpd_method_str
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 881
PDG 1.821705e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_get_conn
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_get_conn
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 25565 Function: httpd_get_conn
computerDependencies DEBUG 1
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %read_buf, i64* %read_size1, i64 500)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %decodedurl, i64* %maxdecodedurl2, i64 1)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %origfilename, i64* %maxorigfilename3, i64 1)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %expnfilename, i64* %maxexpnfilename4, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %encodings, i64* %maxencodings5, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %pathinfo, i64* %maxpathinfo6, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %query, i64* %maxquery7, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accept, i64* %maxaccept8, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accepte, i64* %maxaccepte9, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %reqhost, i64* %maxreqhost10, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %hostdir, i64* %maxhostdir11, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %remoteuser, i64* %maxremoteuser12, i64 0)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %response, i64* %maxresponse13, i64 0)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call27 = call i32 @sockaddr_check(%union.httpd_sockaddr* %sa)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : sockaddr_check
DEBUG 459 connectCallerAndCallee callInst:   %call27 = call i32 @sockaddr_check(%union.httpd_sockaddr* %sa)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call38 = call i64 @sockaddr_len(%union.httpd_sockaddr* %sa)
---------------------------------------------------
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 968
accept is defined outside!
PDG 1.860465e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_got_request
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_got_request
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 25870 Function: httpd_got_request
computerDependencies DEBUG 1
------------------------DEBUG finding CallInst---------------------------
allPtrSet.size = 1001
PDG 1.899225e+01% completed
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_parse_request
After getAnalysis<FlowDependenceAnalysis>()
FlowDependenceAnalysis::runOnFunction Local Deps: 0
Local Deps: 0
++++++++++++++++++++++++++++++ DataDependency::runOnFunction +++++++++++++++++++++++++++++
Function name:httpd_parse_request
After getAnalysis<FlowDependenceAnalysis>()
 CDG.cpp after insert nodes.size 26938 Function: httpd_parse_request
computerDependencies DEBUG 1
DEBUG 456 New call for tree construction:   %call = call i8* @bufgets(%struct.httpd_conn* %1)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : bufgets
DEBUG 459 connectCallerAndCallee callInst:   %call = call i8* @bufgets(%struct.httpd_conn* %1)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %4, i32 400, i8* %5, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %28, i32 400, i8* %29, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %30, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %34, i32 400, i8* %35, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %36, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %41, i32 400, i8* %42, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %43, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %reqhost46, i64* %maxreqhost, i64 %call47)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %53, i32 400, i8* %54, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %55, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call56 = call i8* @httpd_method_str(i32 1)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : httpd_method_str
DEBUG 459 connectCallerAndCallee callInst:   %call56 = call i8* @httpd_method_str(i32 1)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call62 = call i8* @httpd_method_str(i32 2)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call69 = call i8* @httpd_method_str(i32 3)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %62, i32 501, i8* %63, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %64, i8* %65)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %decodedurl, i64* %maxdecodedurl, i64 %call80)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @strdecode(i8* %73, i8* %75)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : strdecode
DEBUG 459 connectCallerAndCallee callInst:   call void @strdecode(i8* %73, i8* %75)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %origfilename, i64* %maxorigfilename, i64 %call84)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %query, i64* %maxquery, i64 %call104)
---------------------------------------------------
DEBUG 456 New call for tree construction:   call void @de_dotdot(i8* %104)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : de_dotdot
DEBUG 459 connectCallerAndCallee callInst:   call void @de_dotdot(i8* %104)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %120, i32 400, i8* %121, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %122, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call148 = call i8* @bufgets(%struct.httpd_conn* %125)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %161, i32 400, i8* %162, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %163, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call225 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accept227, i64* %maxaccept, i64 %add231)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accept235, i64* %maxaccept236, i64 %call237)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call260 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr259)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accepte262, i64* %maxaccepte, i64 %add267)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %accepte271, i64* %maxaccepte272, i64 %call273)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call291 = call i64 @tdate_parse(i8* %218)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : tdate_parse
DEBUG 459 connectCallerAndCallee callInst:   %call291 = call i64 @tdate_parse(i8* %218)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   %call364 = call i64 @tdate_parse(i8* %256)
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_send_err(%struct.httpd_conn* %291, i32 400, i8* %292, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0), i8* %293, i8* getelementptr inbounds ([1 x i8]* @.str26170, i32 0, i32 0))
---------------------------------------------------
DEBUG 459 connectCallerAndCallee callInst:   call void @httpd_realloc_str(i8** %expnfilename, i64* %maxexpnfilename, i64 %call444)
---------------------------------------------------
DEBUG 456 New call for tree construction:   %call457 = call i32 @vhost_map(%struct.httpd_conn* %311)
DEBUG 152: In connectFunctionAndFormalTrees, callee->getName() : vhost_map
