digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x2220640 [shape=record,label="{  %num1.addr = alloca i32, align 4}"];
	Node0x2220640 -> Node0x22206b0[style=dotted,label = "{DEF_USE}" ];
	Node0x2220640 -> Node0x2220720[style=dotted,label = "{DEF_USE}" ];
	Node0x22206b0 [shape=record,label="{  store i32 %num1, i32* %num1.addr, align 4}"];
	Node0x22206b0 -> Node0x2220720[style=dotted,label = "{RAW} num1.addr"];
	Node0x2220720 [shape=record,label="{  %0 = load i32* %num1.addr, align 4}"];
	Node0x2220720 -> Node0x2220940[style=dotted,label = "{DEF_USE}" ];
	Node0x2220720 -> Node0x2220bd0[style=dotted];
	Node0x2220720 -> Node0x22250b0[style=dotted];
	Node0x22207f0 [shape=record,label="{  %num2.addr = alloca i32, align 4}"];
	Node0x22207f0 -> Node0x2220860[style=dotted,label = "{DEF_USE}" ];
	Node0x22207f0 -> Node0x2220790[style=dotted,label = "{DEF_USE}" ];
	Node0x2220860 [shape=record,label="{  store i32 %num2, i32* %num2.addr, align 4}"];
	Node0x2220860 -> Node0x2220790[style=dotted,label = "{RAW} num2.addr"];
	Node0x2220790 [shape=record,label="{  %1 = load i32* %num2.addr, align 4}"];
	Node0x2220790 -> Node0x2220940[style=dotted,label = "{DEF_USE}" ];
	Node0x2220790 -> Node0x2220bd0[style=dotted];
	Node0x2220790 -> Node0x22250b0[style=dotted];
	Node0x2220940 [shape=record,label="{  %add = add nsw i32 %0, %1}"];
	Node0x2220940 -> Node0x22209f0[style=dotted,label = "{DEF_USE}" ];
	Node0x22209f0 [shape=record,label="{  ret i32 %add}"];
	Node0x22209f0 -> Node0x2225750[style=dotted];
	Node0x2220a80 [shape=record,label="{\<\<ENTRY\>\> sum}"];
	Node0x2220a80 -> Node0x2220640;
	Node0x2220a80 -> Node0x22207f0;
	Node0x2220a80 -> Node0x22206b0;
	Node0x2220a80 -> Node0x2220860;
	Node0x2220a80 -> Node0x2220720;
	Node0x2220a80 -> Node0x2220790;
	Node0x2220a80 -> Node0x2220940;
	Node0x2220a80 -> Node0x22209f0;
	Node0x2220a80 -> Node0x2224e10[style=dashed];
	Node0x2220a80 -> Node0x2220bd0[style=dashed];
	Node0x2220a80 -> Node0x2225040[style=dashed];
	Node0x2220a80 -> Node0x22250b0[style=dashed];
	Node0x2223d30 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x2223d30 -> Node0x2223da0[style=dotted,label = "{DEF_USE}" ];
	Node0x2223da0 [shape=record,label="{  store i32 0, i32* %retval}"];
	Node0x2223e10 [shape=record,label="{  %f2p = alloca i32 (i32, i32)*, align 8}"];
	Node0x2223e10 -> Node0x2223e80[style=dotted,label = "{DEF_USE}" ];
	Node0x2223e10 -> Node0x2223ef0[style=dotted,label = "{DEF_USE}" ];
	Node0x2223e80 [shape=record,label="{  store i32 (i32, i32)* @sum, i32 (i32, i32)** %f2p, align 8}"];
	Node0x2223e80 -> Node0x2223ef0[style=dotted,label = "{RAW} f2p"];
	Node0x2223ef0 [shape=record,label="{  %0 = load i32 (i32, i32)** %f2p, align 8}"];
	Node0x2223ef0 -> Node0x2224310[style=dotted,label = "{DEF_USE}" ];
	Node0x2223f90 [shape=record,label="{  %op1 = alloca i32, align 4}"];
	Node0x2223f90 -> Node0x2224000[style=dotted,label = "{DEF_USE}" ];
	Node0x2223f90 -> Node0x2224070[style=dotted,label = "{DEF_USE}" ];
	Node0x2224000 [shape=record,label="{  store i32 %call, i32* %op1, align 4}"];
	Node0x2224000 -> Node0x2224070[style=dotted,label = "{RAW} op1"];
	Node0x2224070 [shape=record,label="{  %1 = load i32* %op1, align 4}"];
	Node0x2224070 -> Node0x2225b80[style=dotted,label = "{DEF_USE}" ];
	Node0x2220b20 [shape=record,label="{  %op2 = alloca i32, align 4}"];
	Node0x2220b20 -> Node0x2220b50[style=dotted,label = "{DEF_USE}" ];
	Node0x2220b20 -> Node0x2224270[style=dotted,label = "{DEF_USE}" ];
	Node0x2220b50 [shape=record,label="{  store i32 %call1, i32* %op2, align 4}"];
	Node0x2220b50 -> Node0x2224270[style=dotted,label = "{RAW} op2"];
	Node0x2224270 [shape=record,label="{  %2 = load i32* %op2, align 4}"];
	Node0x2224270 -> Node0x2225c10[style=dotted,label = "{DEF_USE}" ];
	Node0x2224310 [shape=record,label="{  %call = call i32 %0(i32 10, i32 13)}"];
	Node0x2224e10 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2224e10 -> Node0x2220bd0[style=dashed];
	Node0x2224e10 -> Node0x22206b0[style=dotted];
	Node0x2224e10 -> Node0x2220860[style=dotted];
	Node0x2220bd0 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x2220bd0 -> Node0x22258a0[style=dashed];
	Node0x2225040 [shape=record,label="{FORMAL_IN:i32}"];
	Node0x2225040 -> Node0x22250b0[style=dashed];
	Node0x2225040 -> Node0x22206b0[style=dotted];
	Node0x2225040 -> Node0x2220860[style=dotted];
	Node0x22250b0 [shape=record,label="{FORMAL_OUT:i32}"];
	Node0x22250b0 -> Node0x22259a0[style=dashed];
	Node0x2225750 [shape=record,label="{  %call1 = call i32 @sum(i32 10, i32 13)}"];
	Node0x2225750 -> Node0x2220a80;
	Node0x2225750 -> Node0x2225800[style=dashed];
	Node0x2225750 -> Node0x22258a0[style=dashed];
	Node0x2225750 -> Node0x2225870[style=dashed];
	Node0x2225750 -> Node0x22259a0[style=dashed];
	Node0x2225750 -> Node0x2220b50[style=dotted,label = "{DEF_USE}" ];
	Node0x2225800 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2225800 -> Node0x2224e10[style=dashed];
	Node0x22258a0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x22258a0 -> Node0x2224070[style=dotted];
	Node0x22258a0 -> Node0x2224270[style=dotted];
	Node0x2225870 [shape=record,label="{ACTUAL_IN:i32}"];
	Node0x2225870 -> Node0x2225040[style=dashed];
	Node0x22259a0 [shape=record,label="{ACTUAL_OUT:i32}"];
	Node0x22259a0 -> Node0x2224070[style=dotted];
	Node0x22259a0 -> Node0x2224270[style=dotted];
	Node0x2225b80 [shape=record,label="{  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str, i32 0, i32 0), i32 %1)}"];
	Node0x2225c10 [shape=record,label="{  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str1, i32 0, i32 0), i32 %2)}"];
	Node0x2225ca0 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x2225ca0 -> Node0x2223d30;
	Node0x2225ca0 -> Node0x2223e10;
	Node0x2225ca0 -> Node0x2223f90;
	Node0x2225ca0 -> Node0x2220b20;
	Node0x2225ca0 -> Node0x2223da0;
	Node0x2225ca0 -> Node0x2223e80;
	Node0x2225ca0 -> Node0x2223ef0;
	Node0x2225ca0 -> Node0x2224310;
	Node0x2225ca0 -> Node0x2224000;
	Node0x2225ca0 -> Node0x2225750;
	Node0x2225ca0 -> Node0x2220b50;
	Node0x2225ca0 -> Node0x2224070;
	Node0x2225ca0 -> Node0x2225b80;
	Node0x2225ca0 -> Node0x2224270;
	Node0x2225ca0 -> Node0x2225c10;
	Node0x2225ca0 -> Node0x2225930;
	Node0x2225930 [shape=record,label="{  ret i32 0}"];
}
